<section
  id="MainProduct-{{ section.id }}"
  class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}"
  data-section="{{ section.id }}"
> 
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {{ 'component-quantity-breaks.css' | asset_url | stylesheet_tag }}
  {%- if product.quantity_price_breaks_configured? -%}
    {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {%- endif -%}



 {% if section.settings.show_full_image %}
  <style>
     @media screen and (max-width: 749px) {
     .product__media-list .product__media-item {
       width: calc(100% - {{ section.settings.second_image_size }}% +  var(--grid-mobile-horizontal-spacing) - var(--grid-mobile-horizontal-spacing)) !important;
     }
       .thumbnail {
         left: 2px;
     }
       .product__media-list .media>* {
         overflow: hidden;
     }
       {% if section.settings.first_image_size == 100 %}
          .product__media-list .media>* {
         border-radius: 0;
     }
          .product__media-list video {
         border-radius: 0;
     }
       {% endif %}

    .lumin-slider.slider.slider--mobile {
       scroll-padding-left: 0rem !important;
      }
     .grid--peek.slider--mobile {
     {% if section.settings.second_image_size > 0 %} margin:auto; {% else %} margin: auto;{% endif %}
      width: {{ section.settings.first_image_size }}%;
  }
}
  </style>
{% endif %}

<style>
   .product__media-wrapper {
   padding-left: 0;
  padding-bottom: 1rem;
   }
  @media screen and (max-width: 749px) {
  .slider.slider--mobile .slider__slide {
      padding-top: 0 !important;
  }
  }

    .container-text {
        position: relative;
        top: -{{section.settings.container_padding}}px;
        text-align: center;
        width: calc(100% + {{section.settings.container_padding}}px* 2);
        left: -{{section.settings.container_padding}}px;
        padding: 3px;
        margin:0;
        margin-bottom: calc(10px - {{section.settings.container_padding}}px);
        background: {{ section.settings.container_text_bg }};
        border-radius: {{section.settings.container_radius}}px;
        color: {{ section.settings.container_text_txt }};
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
       @media screen and (max-width: 600px){
    .container-text { 
      border-radius: {{section.settings.container_radius_mb}}px;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      top: -{{section.settings.container_padding_mb}}px;
      text-align: center;
      width: calc(100% + {{section.settings.container_padding_mb}}px* 2);
      left: -{{section.settings.container_padding_mb}}px;
      margin:0;
      margin-bottom: calc(10px - {{section.settings.container_padding_mb}}px);
    }
       }
    {% if section.settings.show_container_mb %}
    .product__media-wrapper {
  padding-bottom: 2rem;
   }
    {% endif %}
     {% if section.settings.show_container %}
       
      @media screen and (min-width: 601px) {
    .lumin-container {
    border: 1px solid {{section.settings.container_border_color}};
    border-radius: {{section.settings.container_radius}}px;
    background: {{section.settings.container_color}};
    padding: {{section.settings.container_padding}}px !important;
    }
      }
        {% endif %}
    {% if section.settings.show_container_mb %}
    @media screen and (max-width: 600px){
    .lumin-container-mb {
      border-radius: {{section.settings.container_radius_mb}}px;
      {% if section.settings.show_container_mb %}
      border: 1px solid {{section.settings.container_border_color_mb}};
      background: {{section.settings.container_color_mb}};
      padding: {{section.settings.container_padding_mb}}px;
        {% else %}
      background: transparent;
      padding: 0;
      {% endif %}
    }
    }
     {% endif %}
</style>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top_mb }}px;
    padding-bottom: {{ section.settings.padding_bottom_mb }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}


  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- if product.quantity_price_breaks_configured? -%}
    <script src="{{ 'show-more.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {% if section.settings.image_zoom == 'hover' %}
    <script id="enableZoomOnHover" src="{{ 'magnify.js' | asset_url }}" defer="defer"></script>
  {% endif %}
  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}
  {% assign show_feature_media = section.settings.show_feature_media %}
  <div class="page-width">
    <div class="product product--{{ section.settings.media_size }} product--{{ section.settings.media_position }} {% if section.settings.gallery_layout == 'vertical_right' or section.settings.gallery_layout == 'vertical_left' %} product--thumbnail{% else %} product--{{ section.settings.gallery_layout }}{% endif %} product--mobile-{{ section.settings.mobile_thumbnails }} grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
      <div class="grid__item product__media-wrapper{% if section.settings.media_position == 'right' %} medium-hide large-up-hide lumin-quick-add-show{% endif %}">
        {% if section.settings.gallery_layout == 'vertical_right' or section.settings.gallery_layout == 'vertical_left' %}
        {% render 'product-media-gallery-vertical', variant_images: variant_images, show_feature_media: show_feature_media %}
        {% else %}
        {% render 'product-media-gallery', variant_images: variant_images, show_feature_media: show_feature_media %}
        {% endif %}
      </div>
      <div
        class="
          product__info-wrapper grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}
          {% if section.settings.show_container_mb %}lumin-container-mb{% endif %}
          {% if section.settings.show_container and section.settings.enable_sticky_info == false %} lumin-container{% endif %}
        "
        {% if section.settings.show_container and section.settings.enable_sticky_info == false %}
          style="--lumin-container-margin: 5rem;"
        {% endif %}
      >
        <product-info
          id="ProductInfo-{{ section.id }}"
          data-section="{{ section.id }}"
          data-url="{{ product.url }}"
          class="
            product__info-container{% if section.settings.enable_sticky_info %} product__column-sticky{% endif %}
            {% if section.settings.show_container and section.settings.enable_sticky_info %} lumin-container{% endif %}
          "
        >
          {% if section.settings.show_container and section.settings.container_text != blank %}
            <div class="container-text small-hide">{{ section.settings.container_text }}</div>
          {% endif %}
          {% if section.settings.show_container_mb and section.settings.container_text != blank %}
            <div class="container-text medium-hide large-up-hide">{{ section.settings.container_text }}</div>
          {% endif %}
          {%- assign product_form_id = 'product-form-' | append: section.id -%}

          {%- for block in section.blocks -%}
            {%- assign previous_block_index = forloop.index0 | minus: 1 -%}
            {%- assign previous_block = section.blocks[previous_block_index] -%}
            {%- assign next_block = section.blocks[forloop.index] -%}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'text' -%}
                <p
                  class="product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                  {{ block.shopify_attributes }}
                >
                  {{- block.settings.text -}}
                </p>
              {%- when 'auto_tabs' -%}
                {%- style -%}
                  .block-{{ block.id }}-padding {
                    padding-top: {{ block.settings.padding_top | times: 0.75 | round: 0 }}px;
                    padding-bottom: {{ block.settings.padding_bottom | times: 0.75 | round: 0 }}px;
                  }

                  @media screen and (min-width: 750px) {
                    .block-{{ block.id }}-padding {
                      padding-top: {{ block.settings.padding_top }}px;
                      padding-bottom: {{ block.settings.padding_bottom }}px;
                    }
                  }
                {%- endstyle -%}
                {% assign scheme1 = settings.color_schemes | first %}
                <div
                  class="block-{{ block.id }}-padding"
                  style="--tab-heading-size: {{block.settings.auto_tab_heading}}px;"
                  {{ block.shopify_attributes }}
                >
                  <div
                    class="gradient color-{{ block.settings.tabs_color_scheme }} content-container"
                    style="{% if block.settings.tabs_color_scheme != scheme1 %}padding: 1rem 2rem;{% endif %}{% if block.settings.compact %}max-width:44rem;{% endif %}"
                  >
                    {% render 'dynamic-tabs' %}
                  </div>
                </div>
              {%- when 'testimonial-images' -%}
                {{ 'image-bar.css' | asset_url | stylesheet_tag }}

                <div
                  class="lm-tot-bar"
                  style="
                    --bar-font-size:{{block.settings.text_size}}px;
                    --bar-zoom:{{block.settings.image_size}};
                    --bar-image-space:{{block.settings.image_space}}px;
                  "
                >
                  <div class="lm-img-bar" {{ block.shopify_attributes }}>
                    {%- if block.settings.image != blank -%}
                     {%
                    render 'responsive-image-low' with
                    image: block.settings.image,
                    image_class: "image",
                    wrapper_class: "image-wrapper"
                  %}
                {%- else -%}
                       {% render 'lumin-placeholder' %}
                {%- endif -%}
                    {%- unless block.settings.hide_img_2 -%}
                      {%- if block.settings.image_2 != blank -%}
                           {%
                    render 'responsive-image-low' with
                    image: block.settings.image_2,
                    image_class: "image",
                    wrapper_class: "image-wrapper"
                  %}
                {%- else -%}
                       {% render 'lumin-placeholder' %}
                {%- endif -%}
                    {% endunless %}
                    {%- unless block.settings.hide_img_3 -%}
                      {%- if block.settings.image_3 != blank -%}
                        {%
                    render 'responsive-image-low' with
                    image: block.settings.image_3,
                    image_class: "image",
                    wrapper_class: "image-wrapper"
                  %}
                {%- else -%}
                      {% render 'lumin-placeholder' %}
                {%- endif -%}
                    {% endunless %}
                    {%- unless block.settings.hide_img_4 -%}
                      {%- if block.settings.image_4 != blank -%}
                        {%
                    render 'responsive-image-low' with
                    image: block.settings.image_4,
                    image_class: "image",
                    wrapper_class: "image-wrapper"
                  %}
                {%- else -%}
                        {% render 'lumin-placeholder' %}
                {%- endif -%}
                    {% endunless %}
                    {%- unless block.settings.hide_img_5 -%}
                      {%- if block.settings.image_5 != blank -%}
                         {%
                    render 'responsive-image-low' with
                    image: block.settings.image_5 | image_url: width: 100,
                    image_class: "image",
                    wrapper_class: "image-wrapper"
                  %}
                {%- else -%}
                       {% render 'lumin-placeholder' %}
                {%- endif -%}
                    {% endunless %}
                  </div>
                   <span class="{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                 {{
                    block.settings.text_block
                    | replace: '[', '<span class="lumin-text__fancy1">'
                    | replace: ']', '</span>'
                    | replace: '((', '<span class="lumin-text__fancy2">'
                    | replace: '))', '</span>'
                  }}</span>
                </div>
              {%- when 'tabs' -%}
                {{ 'lumin-tab.css' | asset_url | stylesheet_tag }}
                <style>
                     ul.lumin-tab-{{ block.id }} {
                       justify-content: {{ block.settings.tab_font_align }};
                      {% if block.settings.show_border %} border-bottom: .1rem solid rgba(var(--color-foreground), .08);{% endif %}
                         }

                    .lumin-tab-{{block.id}} h4 {
                      font-size: {{block.settings.tab_font}}px;
                    }

                    .lumin-tab-content-{{ block.id }} {
                                text-align: {{ block.settings.tab_content_align }};
                          }

                  @media only screen and (max-width: 576px){
                     .lumin-tab-{{block.id}} h4 {
                      font-size: {{block.settings.tab_font_mb}}px;
                    }
                     ul.lumin-tab-{{ block.id }} {
                    justify-content: {{ block.settings.tab_font_mb_align }};
                    }
                   .lumin-tab-content-{{ block.id }} {
                     text-align: {{ block.settings.tab_content_align_mb }};
                      }
                    }
                </style>
                {% assign scheme1 = settings.color_schemes | first %}
                <div
                  class="section-{{ block.id }}-padding gradient color-{{ block.settings.tabs_color_scheme }} content-container"
                  style="{% if block.settings.tabs_color_scheme != scheme1 %}padding: 1rem 2rem;{% endif %}{% if block.settings.compact %}max-width:44rem;{% endif %}"
                >
                  <ul class="lumin-tab-{{block.id}} custom--tabs" {{ block.shopify_attributes }}>
                    <li class="tab__list active{% if block.settings.large-hide %} large-up-hide{% endif %}{% if block.settings.small-hide %} small-hide{% endif %}">
                      <h4
                        class="custom-tab active"
                        data-content-id="content--{{ block.id }}"
                      >
                        {{ block.settings.heading }}
                      </h4>
                    </li>
                    {% if block.settings.tab_2 %}
                      <li class="tab__list{% if block.settings.large-hide-2 %} large-up-hide{% endif %}{% if block.settings.small-hide-2 %} small-hide{% endif %}">
                        <h4
                          class="custom-tab"
                          data-content-id="content-2--{{ block.id }}"
                        >
                          {{ block.settings.heading_2 }}
                        </h4>
                      </li>
                    {% endif %}
                    {% if block.settings.tab_3 %}
                      <li class="tab__list{% if block.settings.large-hide-3 %} large-up-hide{% endif %}{% if block.settings.small-hide-3 %} small-hide{% endif %}">
                        <h4
                          class="custom-tab"
                          data-content-id="content-3--{{ block.id }}"
                        >
                          {{ block.settings.heading_3 }}
                        </h4>
                      </li>
                    {% endif %}
                  </ul>

                  <div
                    id="content--{{ block.id }}"
                    class="custom__tab-content lumin-tab-content-{{ block.id }} active{% if block.settings.large-hide %} large-up-hide{% endif %}{% if block.settings.small-hide %} small-hide{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {% if block.settings.description %}
                      {{ product.description }}
                    {% else %}
                      {{ block.settings.tab_content }}
                    {% endif %}
                  </div>
                  {% if block.settings.tab_2 %}
                    <div
                      id="content-2--{{ block.id }}"
                      class="custom__tab-content lumin-tab-content-{{ block.id }}{% if block.settings.large-hide-2 %} large-up-hide{% endif %}{% if block.settings.small-hide-2 %} small-hide{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {% if block.settings.description_2 %}
                        {{ product.description }}
                      {% else %}
                        {{ block.settings.tab_content_2 }}
                      {% endif %}
                    </div>
                  {% endif %}
                  {% if block.settings.tab_3 %}
                    <div
                      id="content-3--{{ block.id }}"
                      class="custom__tab-content lumin-tab-content-{{ block.id }}{% if block.settings.large-hide-3 %} large-up-hide{% endif %}{% if block.settings.small-hide-3 %} small-hide{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.tab_content_3 }}
                    </div>
                  {% endif %}
                </div>

                <script>
                  tabs= document.querySelectorAll('.custom-tab');
                  tabContents= document.querySelectorAll('.custom__tab-content');

                  tabs.forEach(function(tab){
                      tab.addEventListener('click',function(){

                          contentId = this.dataset.contentId;
                          content = document.getElementById(contentId);

                          tabContents.forEach(function(content){
                              content.classList.remove('active');
                          });

                          tabs.forEach(function(tab){
                              tab.classList.remove('active');
                          });

                          this.classList.add('active');
                          content.classList.add('active');
                      });
                  });
                </script>

              {%- when 'breadcrumbs' -%}
                {%- style -%}
                    .breadcrumbs {
                      margin-top: {{ block.settings.margin_top }}px;
                      margin-bottom: {{ block.settings.margin_bottom }}px;
                       padding-top: {{ block.settings.padding_top }}px;
                       padding-top_mb: {{ block.settings.padding_top_mb }}px;
                       padding-bottom: {{ block.settings.padding_bottom }}px;
                    }
                  @media screen and (max-width: 600px){
                    .breadcrumbs {
                       padding-top: {{ block.settings.padding_top_mb }}px;
                    }
                  }
                    .breadcrumbs__list {
                      list-style-type: none;
                      margin: 0;
                      padding: 0;
                    }

                    .breadcrumbs__item {
                      display: inline-block;
                      font-size: 80%;
                    }
                    .breadcrumbs__item a {
                      text-decoration: none;
                      color: inherit;
                    }
                    .breadcrumbs__item:hover a {
                      text-decoration: underline;
                      text-underline-offset: 0.3rem;
                    }

                    .breadcrumbs__item:not(:last-child):after {
                      border-left: 1px solid #cbcbcb;
                      content: '';
                      display: inline-block;
                      height: 14px;
                      margin: 0 8px;
                      position: relative;
                      transform: rotate(15deg);
                      vertical-align: middle;
                    }

                    .breadcrumbs__link {
                      text-decoration: none;
                  color: inherit;
                    }

                    .breadcrumbs__link[aria-current="page"] {
                      color: inherit;
                      font-weight: normal;
                      text-decoration: none;
                    }

                    .breadcrumbs__link[aria-current="page"]:hover,
                    .breadcrumbs__link[aria-current="page"]:focus {
                      text-decoration: underline;
                    }
                {%- endstyle -%}

                <nav
                  class="breadcrumbs"
                  role="navigation"
                  aria-label="breadcrumbs"
                >
                  <ol class="breadcrumbs__list">
                    <li class="breadcrumbs__item">
                      <a class="breadcrumbs__link" href="/">{{ block.settings.title_home }}</a>
                    </li>
                    {%- if collection.url -%}
                      <li class="breadcrumbs__item">
                        {{ collection.title | link_to: collection.url }}
                      </li>
                    {%- endif -%}
                    <li class="breadcrumbs__item">
                      <a class="breadcrumbs__link" href="{{ product.url }}" aria-current="page">{{ product.title }}</a>
                    </li>
                  </ol>
                </nav>

              {%- when 'text_benefits' -%}
                <style>
                  .text-benefits p {
                    margin: 5px 0;
                  }
                </style>
                <div class="text-benefits" {{ block.shopify_attributes }}>
                  <p
                    class="text-benefits product__text inline-richtext"
                  >
                    {{- block.settings.benefits -}}
                  </p>
                </div>
              {%- when 'line' -%}
                <hr
                  style="
                    margin-top: {{block.settings.padding_top}}px;
                    margin-bottom: {{block.settings.padding_bottom}}px;
                    background:{{block.settings.line_color}};
                  "
                  {{ block.shopify_attributes }}
                >
              {%- when 'fomo' -%}
                <script>
                  // Function to generate a random number between a given range (min and max)
                  function getRandomNumber(min, max) {
                      return Math.floor(Math.random() * (max - min + 1)) + min;
                  }

                  // Function to update the random number in the HTML
                  function updateRandomNumber() {
                      var randomNumberSpan = document.getElementById("randomNumber");
                      var randomNumber = getRandomNumber({{ block.settings.fomo_min }}, {{ block.settings.fomo_max }}); // Change the range as needed
                      randomNumberSpan.textContent = randomNumber;
                  }

                  // Update the random number every 3 seconds (adjust the interval as needed)
                  setInterval(updateRandomNumber, {{ block.settings.fomo_speed | append: "000" }});
                </script>
                {% assign scheme1 = settings.color_schemes | first %}
                {% assign before_text = block.settings.fomo_text_before %}
                {% assign randomNumber = block.settings.fomo_min
                  | plus: 2
                  | prepend: '<span id="randomNumber">'
                  | append: '</span>'
                %}
                <div
                  class="gradient color-{{ block.settings.color_scheme }} lk-fomo-buys"
                  {{ block.shopify_attributes }}
                >
                  <span
                    class="live-circle live-circle-{{block.id}} hs-pill hs-pill-{{block.id}}"
                    style="--pill-color:{{ block.settings.pill_color.red }}, {{ block.settings.pill_color.green }}, {{ block.settings.pill_color.blue }};display:block;"
                  ></span>
                  <span class="message-buys{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                    {{
                      before_text
                      | replace: '(x)', randomNumber
                      | replace: '[', '<span class="lumin-text__fancy1">'
                      | replace: ']', '</span>'
                      | replace: '(', '<span class="lumin-text__fancy2">'
                      | replace: ')', '</span>'
                    }}
                  </span>
                </div>

                <style>
                      .hs-pill-{{block.id}} {
                          background-color: rgb(var(--pill-color), 1);
                          color: rgb(var(--pill-color), .5);
                          border: 1px solid rgb(var(--color-background), 1);
                      }
                      .live-circle-{{block.id}}  {
                          box-shadow: 0 0 0 0 rgba(var(--pill-color), 0.7);
                          transform: scale(1);
                          animation: 1.5s infinite pulsluminin;
                          transition: opacity .35s ease-in-out;
                          background-color: rgba(var(--pill-color), 1);
                      }
                   @keyframes pulsluminin {
                        0% {
                            transform: scale(.95);
                            box-shadow: 0 0 0 0 rgba(var(--pill-color), 0.6);
                        }

                        70% {
                            transform: scale(1);
                            box-shadow: 0 0 0 3px rgba(236,0,140,0);
                        }

                        100% {
                            transform: scale(.95);
                            box-shadow: 0 0 0 0 rgba(236,0,140,0);
                        }
                  }
                      .lk-fomo-buys {
                          display: flex;
                          align-items: center;
                          justify-content: {{block.settings.text_alignment}};
                          padding: {{block.settings.padding_top}}px {{block.settings.padding_bottom}}px;
                          margin: {{block.settings.margin_top}}px 0 {{block.settings.margin_bottom}}px 0;
                          width: fit-content;
                          max-width:44rem;
                          {% if block.settings.fomo_border_activate %} border:1px solid {{ block.settings.fomo_border_color }}; {% endif %}
                          border-radius:{{ block.settings.fomo_border }}px;
                      }
                        .lk-fomo-buys p {
                          margin-top: 0;
                          margin-bottom: 0;
                      }
                      .message-buys {
                          line-height:1.2;
                          font-size: {{block.settings.text_size}}px;
                      }
                </style>
              {%- when 'review' -%}
                <script type="text/javascript">
                  $(document).ready(function(){
                    $(".getyours").click(function(){
                      $('html,body').animate({
                        scrollTop: $('#page5').offset().top
                      }, 500);

                      return false;
                    });
                  })
                </script>
                <div
                  id="page5"
                  style="
                    margin-bottom:{{ block.settings.margin_bottom }}px;margin-top: {{ block.settings.margin_top }}px;
                    --star-min-background: {{ block.settings.lrw_star_color }};
                    --star-color:#eee;
                    --star-size-short: {{ block.settings.star_size }};
                    --short-rating: {{ block.settings.star_rating }};
                    --short-star-color: {{ block.settings.lrw_star_color }};
                    --short-star-inactive: {{ block.settings.lrw_star_color_disable }};
                  "
                  {{ block.shopify_attributes }}
                >
                  {% assign star_size_short = block.settings.star_size %}
                  {% assign rating_short = block.settings.star_rating %}

                  <a
                    class="review-link"
                    style=" display: flex;margin-top: 0;column-gap: 10px;column-gap: 10px;align-items: center;font-weight: 500;cursor: pointer;"
                  >
                    <span style="color: rgba(var(--color-base-accent-2), 1);padding: 0;display:block;">
                      {% if block.settings.star_style == 'star' %}
                        <span class="star-rating-short" style="zoom: {{ star_size_short }};">
                          <!-- Replace with dynamic input -->
                          {% assign max_stars = 5 %}
                          {% assign full_stars = rating_short | floor %}
                          {% assign half_star = rating_short | minus: full_stars | times: 2 | round %}
                          {% assign remaining_stars = max_stars | minus: full_stars | minus: half_star %}

                          <style>
                            .star-rating-short .star-short {
                              width: 24px;
                              height: 24px;
                              margin-right: 2px;
                              vertical-align: text-bottom;
                            }
                          </style>

                          <!-- Loop to show full stars -->
                          {% for i in (1..full_stars) %}
                            <svg
                              class="star-short full"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              width="24"
                              height="24"
                              fill="var(--short-star-color)"
                            >
                              <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.826 1.608 8.144L12 18.896l-7.544 4.38 1.608-8.144L.587 9.306l8.332-1.151z"/>
                            </svg>
                          {% endfor %}

                          <!-- Show half star if needed -->
                          {% if half_star == 1 %}
                            <svg
                              class="star-short half"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              width="24"
                              height="24"
                            >
                              <defs>
                                <linearGradient id="halfStarGradientShort">
                                  <stop offset="50%" stop-color="var(--short-star-color)"/>
                                  <stop offset="50%" stop-color="var(--short-star-inactive)"/>
                                </linearGradient>
                              </defs>
                              <path fill="url(#halfStarGradientShort)" d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.826 1.608 8.144L12 18.896l-7.544 4.38 1.608-8.144L.587 9.306l8.332-1.151z"/>
                            </svg>
                          {% endif %}

                          <!-- Loop to show empty stars -->
                          {% for i in (1..remaining_stars) %}
                            <svg
                              class="star-short empty"
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 24 24"
                              width="24"
                              height="24"
                              fill="var(--short-star-inactive)"
                            >
                              <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.826 1.608 8.144L12 18.896l-7.544 4.38 1.608-8.144L.587 9.306l8.332-1.151z"/>
                            </svg>
                          {% endfor %}
                        </span>
                      {% endif %}
                      {% if block.settings.star_style == 'star_bg' %}
                        <span class="rating-mn" data-rating="{{ rating_short }}" style="zoom: {{ star_size_short }};">
                          {% render 'short-review-2' %}
                        </span>
                      {% endif %}
                      {% if block.settings.star_style == 'star_bg_2' %}
                        <span class="rating-mn" data-rating="{{ rating_short }}" style="zoom: {{ star_size_short }};">
                          {% render 'short-review-3' %}
                        </span>
                      {% endif %}

                      <span style="color:{{ block.settings.lrw_color }}; font-size: {{ block.settings.text_size }}px; text-underline-offset: 1.5px;">
                        {{- block.settings.lrw_text -}}
                      </span>
                    </span>
                  </a>
                </div>
              {%- when 'promo' -%}
                {%- if previous_block.type != 'promo' and next_block.type == 'promo' -%}
                  <div class="product-info__promo-list">
                {%- endif -%}

                {%- if block.settings.title != blank or block.settings.content != blank -%}
                  {%- render 'promo', block: block -%}
                {%- endif -%}

                {%- if forloop.last or previous_block.type == 'promo' and next_block.type != 'promo' -%}
                  </div>
                {%- endif -%}
              {%- when 'feature' -%}
                <style>
                  .qa-feature {
                      display: grid;
                      align-items: center;
                      grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
                  }
                  .qa-feature-{{ block.id }} {
                      display: flex;
                      align-items: center;
                      margin: {{block.settings.padding_top}}px 0 {{block.settings.padding_bottom}}px 0;
                  }
                  .qa-feature-{{ block.id }} h4 {
                        font-size: {{block.settings.heading_size}}px;
                    }
                  .qa-feature-{{ block.id }} {
                        font-size: {{block.settings.text_size}}px;
                    }
                  .qa-feature-{{ block.id }} p {
                        margin: 0px;
                    }
                  .qa-feature-{{ block.id }} img {
                        width: {{block.settings.icon_size}}px !important;
                        height: auto;
                        margin-right: 10px;
                    }
                            .qa-feature-{{ block.id }} svg {
                        width: {{block.settings.icon_size}}px !important;
                        height: auto;
                        margin-right: 10px;
                    }
                </style>
                <div class="qa-feature">
                  <div class="qa-feature-{{ block.id }}" {{ block.shopify_attributes }}>
                    {%- if block.settings.icon != blank -%}
                      <img src="{{ block.settings.icon | img_url: '100x' }}">
                    {%- else -%}
                      <svg width="800px" height="800px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="m12 22.75c-5.93 0-10.75-4.82-10.75-10.75s4.82-10.75 10.75-10.75 10.75 4.82 10.75 10.75-4.82 10.75-10.75 10.75zm0-20c-5.1 0-9.25 4.15-9.25 9.25s4.15 9.25 9.25 9.25 9.25-4.15 9.25-9.25-4.15-9.25-9.25-9.25z"/>
                        <path d="m10.58 15.58c-0.2 0-0.39-0.08-0.53-0.22l-2.83-2.83c-0.29-0.29-0.29-0.77 0-1.06s0.77-0.29 1.06 0l2.3 2.3 5.14-5.14c0.29-0.29 0.77-0.29 1.06 0s0.29 0.77 0 1.06l-5.67 5.67c-0.14 0.14-0.33 0.22-0.53 0.22z"/>
                      </svg>
                    {%- endif -%}
                    <div style="width: calc(100% - {{block.settings.icon_size}}px + 20px);">
                      {% if block.settings.heading != blank %}
                        <h4 style="margin:0; margin-bottom:5px;">{{ block.settings.heading }}</h4>
                      {%- endif -%}
                      {{ block.settings.text }}
                    </div>
                  </div>
                </div>
              {%- when 'shipping' -%}
                <style>
                  .qa-feature-{{ block.id }} {
                        margin: 0px;
                        font-size: {{ block.settings.text_size }}px;
                        text-transform: {{ block.settings.text_style }};
                    }
                  .qa-feature-{{ block.id }} img {
                        width: {{block.settings.icon_size}}px !important;
                        height: auto;
                        vertical-align: middle;
                        margin-right: 0px;
                    }
                            .qa-feature-{{ block.id }} svg {
                        width: {{block.settings.icon_size}}px !important;
                        height: auto;
                        vertical-align: sub;
                        margin-right: 5px;
                    }
                    .ship-wrapper {
                        display: flex;
                        column-gap: 2px;
                        background: {{block.settings.ship_bg}};
                        border-radius: {{ block.settings.border_radius }}px;
                          {% if block.settings.show_border %}
                        box-shadow: 0 0 0 1px {{block.settings.ship_border}};{% endif %}
                        padding: {{block.settings.padding_top}}px {{block.settings.padding_bottom}}px;
                        margin: {{block.settings.margin_top}}px 0 {{block.settings.margin_bottom}}px 0;
                        align-items: center;
                        }
                </style>
                {% assign ship_text = block.settings.text %}
                {% assign countdown = countdown | prepend: '<span id="countdown">' | append: '</span>' %}
                {% assign result = result | prepend: '<span id="result">' | append: '</span>' %}
                <div class="ship-wrapper qa-feature-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.icon != blank -%}
                    <img
                      src="{{ block.settings.icon | img_url: '100x' }}"
                      class="lumin-ani-{{ block.settings.image_ani }} is--infinite"
                    >
                  {%- else -%}
                    <svg
                      class="icon icon-accordion"
                      aria-hidden="true"
                      focusable="false"
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 20 20"
                    >
                      <path d="M0 3.75156C0 3.47454 0.224196 3.24997 0.500755 3.24997H10.647C10.9235 3.24997 11.1477 3.47454 11.1477 3.75156V5.07505V5.63362V6.10938V13.6616C10.9427 14.0067 10.8813 14.1101 10.5516 14.6648L7.22339 14.6646V13.6614H10.1462V4.25316H1.00151V13.6614H2.6842V14.6646H0.500755C0.224196 14.6646 0 14.44 0 14.163V3.75156Z"/>
                      <path d="M18.9985 8.08376L11.1477 6.10938V5.07505L19.6212 7.20603C19.8439 7.26203 20 7.46255 20 7.69253V14.1631C20 14.4401 19.7758 14.6647 19.4992 14.6647H17.3071V13.6615H18.9985V8.08376ZM11.1477 13.6616L13.3442 13.6615L13.3443 14.6647L10.5516 14.6648L11.1477 13.6616Z"/>
                      <path d="M7.71269 14.1854C7.71269 15.6018 6.56643 16.75 5.15245 16.75C3.73847 16.75 2.59221 15.6018 2.59221 14.1854C2.59221 12.7691 3.73847 11.6209 5.15245 11.6209C6.56643 11.6209 7.71269 12.7691 7.71269 14.1854ZM5.15245 15.7468C6.01331 15.7468 6.71118 15.0478 6.71118 14.1854C6.71118 13.3231 6.01331 12.6241 5.15245 12.6241C4.29159 12.6241 3.59372 13.3231 3.59372 14.1854C3.59372 15.0478 4.29159 15.7468 5.15245 15.7468Z"/>
                      <path d="M17.5196 14.1854C17.5196 15.6018 16.3733 16.75 14.9593 16.75C13.5454 16.75 12.3991 15.6018 12.3991 14.1854C12.3991 12.7691 13.5454 11.6209 14.9593 11.6209C16.3733 11.6209 17.5196 12.7691 17.5196 14.1854ZM14.9593 15.7468C15.8202 15.7468 16.5181 15.0478 16.5181 14.1854C16.5181 13.3231 15.8202 12.6241 14.9593 12.6241C14.0985 12.6241 13.4006 13.3231 13.4006 14.1854C13.4006 15.0478 14.0985 15.7468 14.9593 15.7468Z"/>
                     </svg>
                  {%- endif -%}
                  <p
                    style="margin:0; font-size: {{ block.settings.text_size }}px;"
                    class="{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                  >
                    {{
                      ship_text
                      | replace: '(timer)', countdown
                      | replace: '(date)', result
                      | replace: '[', '<span class="lumin-text__fancy1">'
                      | replace: ']', '</span>'
                      | replace: '(', '<span class="lumin-text__fancy2">'
                      | replace: ')', '</span>'
                    }}
                  </p>

                  <script>
                      function countDate() {
                        const today = new Date();
                        let daysCounted = 0;
                        let weekdaysCounted = 0;
                
                        while (weekdaysCounted < {{ block.settings.ship_days }}) {
                          // Increment date by one day
                          today.setDate(today.getDate() + 1);
                
                          // Check if it's a weekend
                          if (today.getDay() !== 0 && today.getDay() !== 6) {
                            weekdaysCounted++;
                          }
                          
                
                          daysCounted++;
                        } 
                        // Format date as "MMM DD, ddd"
                        const options = { month: "short", day: "numeric", weekday: "short" };
                        const formattedDate = today.toLocaleDateString("{{block.settings.date_locale}}", options);
                
                        // Display result
                        document.getElementById("result").innerHTML = `${formattedDate}`;
                      }
                
                      countDate();
                  </script>

                 <script>
                  // Set the end time to 4pm
                  const endTime = new Date();
                  endTime.setHours({{ block.settings.cut_off_time }}, 0, 0);

                  // Update the countdown every second
                  setInterval(updateCountdown, 1000);
                  </script>

                  function updateCountdown() {
                    const now = new Date().getTime();
                    const distance = endTime.getTime() - now;
                  
                    // If the countdown has ended, reset it to the next day at 4pm
                    if (distance < 0) {
                      endTime.setDate(endTime.getDate() + 1);
                      endTime.setHours({{ block.settings.cut_off_time }}, 0, 0);
                    }
                  
                    // Calculate remaining time
                    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((distance % (1000 * 60)) / 1000);
                  
                    // Update the countdown element
                    const countdownElement = document.getElementById("countdown");
                    countdownElement.innerHTML = `${hours}h ${minutes}m`;
                  }
                  </script>
                </div>
              {%- when 'image' -%}
                <style>
                  .lm-feature-{{ block.id }} {
                      display: block;
                      text-align:{{block.settings.img_position}};
                      margin: {{block.settings.padding_top}}px auto {{block.settings.padding_bottom}}px auto;
                  }
                  .lm-feature-{{ block.id }} img {
                        width: {{block.settings.image_size}}% !important;
                        height: auto;
                        border-radius:{{block.settings.image_border}}px;
                    }
                            .lm-feature-{{ block.id }} svg {
                        width: {{block.settings.image_size}}% !important;
                        height: auto;
                    }
                </style>
                <div class="lm-feature-{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.image != blank -%}
                    <img src="{{ block.settings.image | img_url: '800x' }}">
                  {%- else -%}
                    {{ 'lifestyle-2' | placeholder_svg_tag: 'placeholder-svg' }}
                  {%- endif -%}
                </div>
              {%- when 'checkbox' -%}
                <style>
                  .toggleWrapper input.mobileToggle:checked + label:before {
                  background: {{ block.settings.checkbox_color }};
                  }
                </style>
                <div class="toggleWrapper" {{ block.shopify_attributes }}>
                  <input
                    type="checkbox"
                    value="yes"
                    class="mobileToggle"
                    id="toggle1 custom-gift-{{ block.id }}"
                    form="{{product_form_id}}"
                    name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
                  >
                  <label for="toggle1 custom-gift-{{ block.id }}"></label>
                  <span>{{ block.settings.checkbox_text }}</span>
                </div>
              {%- when 'payment' -%}
                <style>
                  .list-payment-lm { display: flex;flex-wrap: wrap;padding-left: 0;justify-content:{{ block.settings.payment_content_alignment }};}
                </style>
                <div class="footer__payment" {{ block.shopify_attributes }}>
                  <span class="visually-hidden">{{ 'sections.footer.payment' | t }}</span>
                  <ul class="list list-payment-lm" role="list">
                    {%- for type in shop.enabled_payment_types -%}
                      <li class="list-payment__item">
                        {{ type | payment_type_svg_tag: class: 'icon icon--full-color' }}
                      </li>
                    {%- endfor -%}
                  </ul>
                </div>
              {% when 'custom-field' %}
                <style>
                  .block-{{ block.id }}-padding {
                    padding-top: {{ block.settings.padding_top | times: 0.75 | round: 0 }}px;
                    padding-bottom: {{ block.settings.padding_bottom | times: 0.75 | round: 0 }}px;
                  }

                  @media screen and (min-width: 750px) {
                    .block-{{ block.id }}-padding {
                      padding-top: {{ block.settings.padding_top }}px;
                      padding-bottom: {{ block.settings.padding_bottom }}px;
                    }
                  }
                  .error-message {
                          color: red;
                          margin-top: 0;
                      }
                            .form__label-{{block.id}} {
                            font-weight: {{block.settings.font_style}};
                            font-size: {{block.settings.font_size}}px;
                        }
                </style>

                {% if block.settings.field_style == 'text' %}
                  <style>
                    .custom.form__label {
                        margin-bottom: 0.6rem;
                    }
                    .field.custom {
                        margin-top: 0;
                    }
                    .custom .field__input {
                        padding-top: 0.8rem;
                    }
                  </style>
                  <div class="block-{{ block.id }}-padding" {{ block.shopify_attributes }}>
                    <label class="form__label form__label-{{block.id}} custom{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}" for="your-text--{{ block.id }}">
                      {{- block.settings.text_lable -}}
                    </label>
                    <div class="field custom" style="max-width: 70rem;">
                      <input
                        class="field__input"
                        form="{{ 'product-form-' | append: section.id }}"
                        type="text"
                        id="your-text--{{ block.id }}"
                        name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
                        maxlength="50"
                        {% if block.settings.checkbox_required %}
                          required
                        {% endif %}
                      >
                    </div>
                  </div>

                  <p id="errorMessage--{{ block.id }}" class="error-message" style="display: none;">
                    This field is required.
                  </p>

                  <script>
                    document.addEventListener('DOMContentLoaded', () => {
                        const textInput = document.getElementById('your-text--{{ block.id }}');
                        const errorMessage = document.getElementById('errorMessage--{{ block.id }}');

                        const submitButtons = document.querySelectorAll('.product-form__submit');

                        // Apply to all add to cart buttons on the page
                        submitButtons.forEach(submitButton => {
                            submitButton.addEventListener('click', function(event) {
                                // Only proceed with the check if the text input is required
                                if (textInput.required && textInput.value.trim() === '') {
                                    event.preventDefault();  // Prevent form submission
                                    errorMessage.style.display = 'block';  // Show error message

                                    // Scroll to the text input smoothly
                                    textInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
                                } else {
                                    errorMessage.style.display = 'none'; // Hide error message if filled
                                }
                            });
                        });
                    });
                  </script>

                {% elsif block.settings.field_style == 'file' %}
                  <style>
                        .file-upload-container {
                          display: flex;
                          gap: 10px;
                      }
                         .file-upload-container p {
                          margin:0;
                      }
                        .file-upload-container button {
                          height: 30px;
                          min-height: 3rem;
                          background: rgba(var(--color-foreground), 0.05);
                          color: rgba(var(--color-foreground));
                    }
                  </style>
                  <div class="product-form__input">
                    <label class="form__label form__label-{{block.id}} {% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}" for="your-text--{{ block.id }}">{{ block.settings.text_lable }}</label>
                    <div class="file-upload-container">
                      <input
                        id="your-text--{{ block.id }}"
                        form="{{ 'product-form-' | append: section.id }}"
                        name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
                        style="display: none;"
                        type="file"
                        {% if block.settings.checkbox_required %}
                          required
                        {% endif %}
                      >
                      <button id="button-your-text--{{ block.id }}" class="button" type="button">Upload File</button>
                      <p id="fileName-your-text--{{ block.id }}" class="file-name">No file chosen</p>
                    </div>
                  </div>

                  <p id="errorMessage--{{ block.id }}" class="error-message" style="display: none;">
                    This field is required.
                  </p>

                  <script>
                    // Handle the file upload button click
                    document.getElementById('button-your-text--{{ block.id }}').addEventListener('click', function() {
                        document.getElementById('your-text--{{ block.id }}').click();
                    });

                    // Update file name display when a file is chosen
                    document.getElementById('your-text--{{ block.id }}').addEventListener('change', function() {
                        const files = this.files;
                        let fileName;

                        if (files.length === 0) {
                            fileName = 'No file chosen';
                            document.getElementById('errorMessage--{{ block.id }}').style.display = 'none'; // Hide error message if no file
                        } else {
                            fileName = files.length === 1 ? files[0].name : files.length + ' files';
                            document.getElementById('errorMessage--{{ block.id }}').style.display = 'none'; // Hide error message when a file is selected
                        }

                        document.getElementById('fileName-your-text--{{ block.id }}').textContent = fileName;
                    });

                    document.addEventListener('DOMContentLoaded', () => {
                        const submitButtons = document.querySelectorAll('.product-form__submit');

                        // Apply to all add to cart buttons on the page
                        submitButtons.forEach(submitButton => {
                            submitButton.addEventListener('click', function(event) {
                                const fileInput = document.getElementById('your-text--{{ block.id }}');

                                // Check if file input is required and no file is selected
                                if (fileInput.required && fileInput.files.length === 0) {
                                    event.preventDefault();  // Prevent form submission
                                    document.getElementById('errorMessage--{{ block.id }}').style.display = 'block';  // Show error message

                                    // Scroll to the file input smoothly
                                    document.getElementById('fileName-your-text--{{ block.id }}').scrollIntoView({ behavior: 'smooth', block: 'center' });
                                }
                            });
                        });
                    });

                    // Remove novalidate attribute if necessary
                    document.addEventListener("DOMContentLoaded", () => {
                        const form = document.querySelector("form[novalidate]");
                        if (form) {
                            form.removeAttribute("novalidate");
                        }
                    });
                  </script>

                {% elsif block.settings.field_style == 'checkbox' %}
                  <style>
    .custom-checkbox:hover.custom-checkbox:after,
    .custom-checkbox:after {
        box-shadow: none;
    }
    .custom-checkbox {
        align-items: center;
    }
</style>

<div
    class="block-{{ block.id }}-padding field custom-checkbox"
    style="display: flex;"
    {{ block.shopify_attributes }}
>
    <input
        type="checkbox"
        name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
        form="{{ 'product-form-' | append: section.id }}"
        value="Yes"
        id="your-text--{{ block.id }}"
        {% if block.settings.checkbox_required %}
            required
        {% endif %}
    >
    <label
        style="margin-left: 5px; margin-bottom: 0;"
        class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}"
        for="your-text--{{ block.id }}"
    >
        {{- block.settings.text_lable -}}
    </label>
</div>

<p id="errorMessage--{{ block.id }}" class="error-message" style="display: none;">
    This is a required field.
</p>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const checkbox = document.getElementById('your-text--{{ block.id }}');
        const errorMessage = document.getElementById('errorMessage--{{ block.id }}');

        // Listen for changes on the checkbox
        checkbox.addEventListener('change', function() {
            if (checkbox.checked) {
                errorMessage.style.display = 'none'; // Hide error message
            }
        });

        const submitButtons = document.querySelectorAll('.product-form__submit');

        // Apply to all add to cart buttons on the page
        submitButtons.forEach(submitButton => {
            submitButton.addEventListener('click', function(event) {
                if (checkbox.required && !checkbox.checked) {
                    event.preventDefault();  // Prevent form submission
                    errorMessage.style.display = 'block';  // Show error message

                    // Scroll to the checkbox smoothly
                    checkbox.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            });
        });
    });

    // Remove novalidate attribute if necessary
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.querySelector("form[novalidate]");
        if (form) {
            form.removeAttribute("novalidate");
        }
    });
</script>


                {% elsif block.settings.field_style == 'dropdown' %}
                  <div
                    class="block-{{ block.id }}-padding product-form__input product-form__input--dropdown"
                    {{ block.shopify_attributes }}
                  >
                    <label class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}" for="your-text--{{ block.id }}">{{ block.settings.text_lable }}</label>
                    <div class="select">
                      <select
                        class="select__select"
                        your-text--{{ block.id }}
                        name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
                        form="{{ 'product-form-' | append: section.id }}"
                      >
                        <option value="" hidden selected>Please select</option>
                        <option value="{{ block.settings.custom_option_1 }}">
                          {{ block.settings.custom_option_1 }}
                        </option>
                        {% if block.settings.custom_option_2 != blank %}
                          <option value="{{ block.settings.custom_option_2 }}">
                            {{ block.settings.custom_option_2 }}
                          </option>
                        {% endif %}
                        {% if block.settings.custom_option_3 != blank %}
                          <option value="{{ block.settings.custom_option_3 }}">
                            {{ block.settings.custom_option_3 }}
                          </option>
                        {% endif %}
                        {% if block.settings.custom_option_4 != blank %}
                          <option value="{{ block.settings.custom_option_4 }}">
                            {{ block.settings.custom_option_4 }}
                          </option>
                        {% endif %}
                      </select>
                      <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                        <path fill-rule="evenodd" clip-rule="evenodd"
                        d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z"
                        fill="currentColor">
                        </path>
                      </svg>
                    </div>
                  </div>

                {% elsif block.settings.field_style == 'date' %}
                  <style>
                    .custom.form__label{margin-bottom: 0.6rem}.field.custom{margin-top:0}.custom .field__input{padding-top:0.8rem;font-family: var(--font-body-family);color: rgba(var(--color-forluminround),.75);}
                  </style>
                  <div class="block-{{ block.id }}-padding" {{ block.shopify_attributes }}>
                    <label class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %} custom" for="your-text--{{ block.id }}">
                      {{- block.settings.text_lable -}}
                    </label>
                    <div class="select field custom">
                      <input
                        class="field__input"
                        type="date"
                        form="{{ 'product-form-' | append: section.id }}"
                        id="your-text--{{ block.id }}"
                        name="properties[{{ block.settings.checkbox_pro | truncatewords: 3 }}]"
                      >
                    </div>
                  </div>
                {% endif %}

              {%- when 'title' -%}
                <div class="product__title" {{ block.shopify_attributes }}>
                  <h1 style="font-size:{{ block.settings.title_size }}px;line-height:{{ block.settings.title_height }}%;text-transform: {{ block.settings.text_transform }};">
                    {{ product.title | escape }}
                  </h1>
                  <a href="{{ product.url }}" class="product__title">
                    <h2 class="h1" style="font-size:{{ block.settings.title_size }}px;line-height:{{ block.settings.title_height }}%;">
                      {{ product.title | escape }}
                    </h2>
                  </a>
                </div>
              {%- when 'price' -%}
                <style>
                    .lumin-price {
                          font-size: {{block.settings.price_size}}px !important;
                          display: flex;
                          align-items: center;
                          flex-wrap: wrap;
                          padding: {{block.settings.padding_top}}px 0 {{block.settings.padding_bottom}}px 0;
                          color: {{block.settings.regular_price_color}} !important;
                    {% if block.settings.price_bold %}
                          font-weight: 600;
                          display: flex;
                          align-content: center;
                          align-items: center;
                          flex-wrap: wrap;
                      {% endif %}
                      }
                     .product__info-container .price--on-sale .price-item--regular {
                          font-size: {{block.settings.price_size}}px;
                          color: {{block.settings.sale_price_color}} !important;
                          letter-spacing: 0;
                      }
                    .lm-badge {
                          font-size: {{block.settings.badge_text_1}}px;
                          line-height: 1;
                          color: {{block.settings.badge_price_1}};
                          background: {{block.settings.badge_bg_1}};
                          {% if block.settings.price_style == 'price_2' %}
                           font-size: 15px;
                           color: {{block.settings.badge_price}};
                           background:none;
                           padding:0;
                           {% endif %}
                          {% if block.settings.price_bold_2 %}
                          font-weight: 600;
                          {% else %}
                          font-weight:400;
                          {% endif %}
                        }
                    .lm-badge svg {
                       {% if block.settings.price_style == 'price_2' %}
                          width: 15px;
                      {% else %}
                      width: {{block.settings.badge_text_1}}px;
                      {% endif %}
                          height:auto;
                        }
                    .lm-style-2-sale {
                          zoom: {{ block.settings.price_size_2 }};
                        }
                      {%- if block.settings.badge_hide -%}
                    .price--on-sale .price__badge-sale {
                              display: none !important;
                          }
                      {%- endif -%}
                    {% if block.settings.price_style == 'price_2' %}
                    .price--on-sale .price-item--regular:before {
                      content: "";
                      max-width: 34px;
                      border-bottom: 0.2rem solid currentColor;
                  }
                    {% endif %}
                   {% if block.settings.price_first and block.settings.price_style != 'price_2' %}
                   .price--on-sale .price__sale {
                      display: flex !important;
                      flex-direction: row-reverse !important;
                    }
                     .price:not(.price--show-badge) .price-item--last:last-of-type {
                      margin:0 1rem 0 0!important;
                    }
                  {% endif %}
                </style>
                <div class="no-js-hidden" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                  {% if block.settings.price_style == 'price' %}
                    {%- render 'price',
                      product: product,
                      use_variant: true,
                      show_badges: true,
                      price_class: 'lumin-price'
                    -%}
                  {% else %}
                    {%- render 'price_2',
                      product: product,
                      use_variant: true,
                      show_badges: true,
                      price_class: 'lumin-price'
                    -%}
                  {% endif %}
               </div>
                <!-- Free shipping badge under price -->
                <div id="free-delivery-badge" style="
                  background-color: #349E5C;
                  color: white;
                  padding: 7px 16px;
                  border-radius: 999px;
                  font-size: 13px;
                  font-weight: 500;
                  display: inline-flex;
                  align-items: center;
                  gap: 8px;
                  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
                  font-family: 'Helvetica Neue', sans-serif;
                  margin-top: 8px;
                ">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="white" height="16" width="16" viewBox="0 0 640 512">
                    <path d="M624 352h-16V246.6c0-16.2-6.5-31.7-18-43.1l-83.5-83.5c-11.4-11.4-26.9-18-43.1-18H416V80c0-26.5-21.5-48-48-48H48C21.5 32 0 53.5 0 80v320c0 26.5 21.5 48 48 48h32c0 35.3 28.7 64 64 64s64-28.7 64-64h192c0 35.3 28.7 64 64 64s64-28.7 64-64h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM416 128h63.6L576 224H416V128zM144 432c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm320 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"/>
                  </svg>
                  <span id="free-delivery-text">Free delivery</span>
                </div>
                <script>
                  (function(){
                    const translations = {
                      fr: "Livraison gratuite",
                      es: "Envío gratis",
                      de: "Kostenlose Lieferung",
                      it: "Consegna gratuita",
                      pt: "Entrega grátis",
                      nl: "Gratis bezorging",
                      zh: "免费送货",
                      ja: "送料無料",
                      ko: "무료 배송",
                      ar: "توصيل مجاني",
                      ru: "Бесплатная доставка",
                      en: "Free delivery"
                    };
                    const lang = navigator.language.slice(0, 2);
                    const el = document.getElementById("free-delivery-text");
                    if (el) {
                      el.textContent = translations[lang] || translations["en"];
                    }
                  })();
                </script>
                {%- if product.quantity_price_breaks_configured? -%}
                  <div class="volume-pricing-note">
                    <span>{{ 'products.product.volume_pricing.note' | t }}</span>
                  </div>
                {%- endif -%}
                {%- unless block.settings.taxes_hide and block.settings.shipping_hide -%}
                  {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                    <div class="product__tax caption rte">
                      {%- unless block.settings.taxes_hide -%}
                        {%- if cart.taxes_included -%}
                          {{ 'products.product.include_taxes' | t }}
                        {%- endif -%}
                      {%- endunless -%}
                      {%- unless block.settings.shipping_hide -%}
                        {%- if shop.shipping_policy.body != blank -%}
                          {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                        {%- endif -%}
                      {%- endunless -%}
                    </div>
                  {%- endif -%}
                {%- endunless -%}
                <div {{ block.shopify_attributes }}>
                  {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                  {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    {{ form | payment_terms }}
                  {%- endform -%}
                </div>

              {%- when 'inventory' -%}
                {% liquid assign current_variant = product.selected_or_first_available_variant
                   assign text_normal = block.settings.text_normal | replace: '[qty]', current_variant.inventory_quantity
                   if current_variant.inventory_quantity == 1 
                    assign text_low = block.settings.text_low_one | replace: '[qty]', current_variant.inventory_quantity
                  else
                    assign text_low = block.settings.text_low_many | replace: '[qty]', current_variant.inventory_quantity
                  endif
                   assign text_untracked = block.settings.text_untracked | replace: '[qty]', current_variant.inventory_quantity
                   assign text_soldout = block.settings.text_soldout | replace: '[qty]', current_variant.inventory_quantity
                   assign low_pill_color = block.settings.low_pill_color
                %}
                <p
                  class="no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                  {{ block.shopify_attributes }}
                  style="display: flex;gap: 5px;align-items: center;max-width:44rem; font-size: {{ block.settings.bar_font_size }}px;
                  --low_pill_color: {{ block.settings.low_pill_color.red }},{{ block.settings.low_pill_color.green }},{{ block.settings.low_pill_color.blue }};
                  --normal_pill_color: {{ block.settings.normal_pill_color.red }},{{ block.settings.normal_pill_color.green }},{{ block.settings.normal_pill_color.blue }};
                  --sold_pill_color: {{ block.settings.sold_pill_color.red }},{{ block.settings.sold_pill_color.green }},{{ block.settings.sold_pill_color.blue }};"
                  id="Inventory-{{ section.id }}"
                  role="status"
                >
                  
                    {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                      {%- if product.selected_or_first_available_variant.inventory_quantity
                          <= block.settings.inventory_threshold
                      -%}
                         {% if block.settings.show_inventory_pill %}
                        <svg width="15" height="15" aria-hidden="true">
                          <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(var(--low_pill_color), 0.3)"/>
                          <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255 255 255)" stroke-width="1" fill="rgb(var(--low_pill_color))"/>
                        </svg>
                          {% endif %}  
                          {% if block.settings.text_low_one != blank %}
                            {{ text_low }}
                            {% else %}
                          {{- 'products.product.inventory_low_stock' | t -}}
                           {%- endif -%}
                        {% if block.settings.show_inventory_bar %}
                          <style>
                            #progressbar {
                                 background-color: {{ block.settings.background_bar }};
                                 margin-top: -8px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                               }

                               #progressbar>div {
                                 display:block;
                                 background-color: {{ block.settings.low_color }};
                                 background: linear-gradient(325deg,{{ block.settings.low_color }} 0,{{ block.settings.low_color_2 }});
                                 width: 15%;
                                 height: {{ block.settings.inv_bar_height }}px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                                 max-width: 100%;
                                 transition: width 2s ease;
                               }
                          </style>
                          <div id="progressbar"><div id="progressbarInner"></div></div>
                        {% endif %}
                      {%- else -%}
                            {% if block.settings.show_inventory_pill %}
                            <svg width="15" height="15" aria-hidden="true">
                          <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(var(--normal_pill_color), 0.3)"/>
                          <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255 255 255)" stroke-width="1" fill="rgb(var(--normal_pill_color))"/>
                        </svg>
                            {% endif %}
                          {% if block.settings.text_normal != blank %}
                            {{ text_normal }}
                            {% else %}
                          {{- 'products.product.inventory_in_stock' | t -}}
                        {%- endif -%}
                        {% if block.settings.show_inventory_bar %}
                          <style>
                            #progressbar {
                              background-color: {{ block.settings.background_bar }};
                              margin-top: -8px;
                              border-radius: {{ block.settings.inv_bar_radius }}px;
                            }

                            #progressbar>div {
                              display:block;
                              background-color: {{ block.settings.normal_color }};
                              background: linear-gradient(325deg,{{ block.settings.normal_color }} 0,{{ block.settings.normal_color_2 }});
                              width: 70%;
                              height: {{ block.settings.inv_bar_height }}px;
                              border-radius: {{ block.settings.inv_bar_radius }}px;
                              max-width: 100%;
                              transition: width 2s ease;
                            }
                          </style>
                          <div id="progressbar"><div id="progressbarInner"></div></div>
                        {% endif %}
                      {%- endif -%}
                    {%- else -%}
                      {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                        {% if block.settings.show_inventory_pill %}
                        <svg width="15" height="15" aria-hidden="true">
                          <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(var(--normal_pill_color), 0.3)"/>
                          <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255 255 255)" stroke-width="1" fill="rgb(var(--normal_pill_color))"/>
                        </svg>
                          {% endif %}
                            {% if block.settings.text_untracked != blank %}
                            {{ text_untracked }}
                            {% else %}
                        {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                              {% endif %}
                        {% if block.settings.show_inventory_bar %}
                          <style>
                            #progressbar {
                                 background-color: {{ block.settings.background_bar }};
                                 margin-top: -8px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                               }

                               #progressbar>div {
                                 display:block;
                                 background-color: {{ block.settings.normal_color }};
                                 background: linear-gradient(325deg,{{ block.settings.normal_color }} 0,{{ block.settings.normal_color_2 }});
                                 width: 90%;
                                 height: {{ block.settings.inv_bar_height }}px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                                 max-width: 100%;
                                 transition: width 2s ease;
                               }
                          </style>
                          <div id="progressbar"><div id="progressbarInner"></div></div>
                        {% endif %}
                      {%- else -%}
                            {% if block.settings.show_inventory_pill %}
                        <svg width="15" height="15" aria-hidden="true">
                          <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(var(--sold_pill_color), 0.3)"/>
                          <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255 255 255)" stroke-width="1" fill="rgb(var(--sold_pill_color))"/>
                        </svg>
                              {% endif %}
                            {% if block.settings.text_soldout != blank %}
                            {{ text_soldout }}
                            {% else %}
                        {{- 'products.product.inventory_out_of_stock' | t -}}
                              {% endif %}
                        {% if block.settings.show_inventory_bar %}
                          <style>
                            #progressbar {
                                 background-color: {{ block.settings.background_bar }};
                                 margin-top: -8px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                               }

                               #progressbar>div {
                                 display:block;
                                 background-color: #000;
                                 width: 0%;
                                 height: {{ block.settings.inv_bar_height }}px;
                                 border-radius: {{ block.settings.inv_bar_radius }}px;
                                 max-width: 100%;
                                 transition: width 2s ease;
                               }
                          </style>
                          <div id="progressbar"><div id="progressbarInner"></div></div>
                        {% endif %}
                      {%- endif -%}
                    {%- endif -%}
                 
                </p>               
              {%- when 'description' -%}
                {%- if product.description != blank -%}
                  <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>
                {%- endif -%}
              {%- when 'sku' -%}
                <p
                  class="product__sku no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.sku.size == 0 %} visibility-hidden{% endif %}"
                  id="Sku-{{ section.id }}"
                  role="status"
                  {{ block.shopify_attributes }}
                >
                  <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span>
                  {{- product.selected_or_first_available_variant.sku -}}
                </p>
              {%- when 'custom_liquid' -%}
                {{ block.settings.custom_liquid }}
              {%- when 'collapsible_tab' -%}
                <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                  <details id="Details-{{ block.id }}-{{ section.id }}"
                    {% if block.settings.open_first_collapsible_row %}
                    open
                  {% endif %}>
                    <summary>
                      <div class="summary__title">
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class="accordion__title inline-richtext">
                          {{ block.settings.heading | default: block.settings.page.title }}
                        </h2>
                      </div>
                      {% render 'icon-caret' %}
                    </summary>
                    <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                      {{ block.settings.content }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>
              {%- when 'collapsible_description' -%}
                <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                  <details id="Details-{{ block.id }}-{{ section.id }}">
                    <summary>
                      <div class="summary__title">
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class="accordion__title inline-richtext">
                          {{ block.settings.heading | default: block.settings.page.title }}
                        </h2>
                      </div>
                      {% render 'icon-caret' %}
                    </summary>
                    <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                      {{ product.description }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>

               {%- when 'quantity_selector' -%}
                                    {%- if block.settings.enable_quantity_discounts -%}
                    <div class="quantity-breaks-container" 
                         style="--txt-top-qb: {{block.settings.txt_size_head_qb}}px;
                                --txt-sub-top-qb: {{block.settings.txt_size_subhead_qb}}px;
                                --bg-top-qb: {{block.settings.background_top_qb}};
                                --bg-top-text-qb: {{block.settings.background_top_text_qb}};
                                --bg-qb: {{block.settings.background_qb}};
                                --border-qb: {{block.settings.border_qb}};
                                --check-bg-qb: {{block.settings.check_bg_qb}};
                                --check-border-qb: {{block.settings.check_border_qb}};
                                --check-dot: {{block.settings.check_dot}};
                                --hover-bg-qb: {{block.settings.hover_bg_qb}};
                                --hover-border-qb: {{block.settings.hover_border_qb}};
                                --badge-qb: {{block.settings.badge_qb}};
                                --badge-qb-text: {{block.settings.badge_qb_text}};
                                --compare-price: {{block.settings.compare_price}};
                                --qb-border-width: {{block.settings.qb_border_wd}}px;
                                --qb-radius: {{block.settings.qb_border}}px;
                                --qb-padding-top: {{block.settings.padding_top}}px;
                                --qb-padding-bottom: {{block.settings.padding_bottom}}px;">
                      <div class="quantity-breaks__top-bar">
                        <div class='quantity-breaks__title'>
                            <span></span>
                            <span>{{ block.settings.headline }}</span>
                            <span></span>
                          </div>
                        <div class='qb-subheading'>{{ block.settings.sub_headline }}</div>
                      </div>
                        {% if block.settings.option_1_quantity != 0 %}
                            <input id="quantity1" aria-label="Quantity" type="radio" name="quantity" value="{{ block.settings.option_1_quantity }}" form="{{ product_form_id }}" {% if block.settings.preselected == 'option_1' %} checked{% endif %} {% if product.has_only_default_variant == false and block.settings.option_1_quantity != 1 %}onchange="resetIdInputValue()"{% endif %}>
                            <label for="quantity1" class="quantity-break" data-quantity="{{ block.settings.option_1_quantity }}">
                                {% if block.settings.display_badge == "option_1" %}
                                  <p class='quantity-break__badge'>
                                    {{ block.settings.badge_text }}
                                  </p>
                                {% endif %}
                                <div class='quantity-break__content'>
                                    <div class='quantity-break__left'>
                                        <span class='quantity-break__label'>
                                            <span class='quantity-break__label-text'>
                                              {%- if block.settings.option_1_label != blank -%}
                                                  {{ block.settings.option_1_label }}
                                              {%- else -%}
                                                  Buy {{ block.settings.option_1_quantity }}
                                              {%- endif -%}
                                            </span>
                                            {% if block.settings.option_1_benefit != blank %}
                                              <span class='quantity-break__benefit'>{{ block.settings.option_1_benefit }}</span>
                                            {% endif %}
                                        </span> 
                                        {% if block.settings.option_1_caption != blank %}
                                            {% assign price = product.selected_or_first_available_variant.price %}
                                            {% assign current_variant = product.selected_or_first_available_variant %}
                                            
                                            {% if block.settings.option_1_discount_type == 'none' %}
                                              {% assign item_price_replace = current_variant.price | money %}
                                              {% assign discount_replace = '0' %}
                                            
                                            {% elsif block.settings.option_1_discount_type == 'percentage' %}
                                              {% assign option_1_percentage_left = 100 | minus: block.settings.option_1_percentage_off %}
                                              {% assign item_price_replace = 100
                                                | minus: block.settings.option_1_percentage_off
                                                | divided_by: 100.0
                                                | times: current_variant.price
                                                | money
                                              %}
                                              {% assign discount_replace = block.settings.option_1_percentage_off | append: '%' %}
                                            
                                            {% else %}
                                              {% assign option_1_fixed_amount_off = block.settings.option_1_fixed_amount_off | times: 100.00 %}
                                              {% assign item_price_replace = price
                                                | times: block.settings.option_1_quantity
                                                | minus: option_1_fixed_amount_off
                                                | divided_by: block.settings.option_1_quantity
                                                | money
                                              %}
                                              {% assign discount_replace = option_1_fixed_amount_off | money %}
                                            {% endif %}
                                            <span class="quantity-break__caption">
                                              {% unless block.settings.option_1_caption == blank %}
                                              
                                                  {{
                                                    block.settings.option_1_caption
                                                    | replace: '[qty]', qty_replace
                                                    | replace: '[discount]', discount_replace
                                                    | replace: '[item_price]', item_price_replace
                                                    | replace: '[total_price]', total_price_replace
                                                  -}}
                                              
                                              {% endunless %}
                                            </span>
                                        {% endif %}
                                              
                                    </div>
                                    <div class='quantity-break__right' id="option-1-price-{{ section.id }}">
                                        <span class='quantity-break__price'>
                                            {% assign price = product.selected_or_first_available_variant.price %}
                              
                                            {% if block.settings.option_1_discount_type == 'none' %}
                                              {{ price | times: block.settings.option_1_quantity | money }}
                                            {% elsif block.settings.option_1_discount_type == 'percentage' %}
                                              {% assign option_1_percentage_left = 100 | minus: block.settings.option_1_percentage_off %}
                                              {{ price | times: block.settings.option_1_quantity | times: option_1_percentage_left | divided_by: 100.00 | money }}
                                            {% else %}
                                              {% assign option_1_fixed_amount_off = block.settings.option_1_fixed_amount_off | times: 100.00 %}
                                              {{ price | times: block.settings.option_1_quantity | minus: option_1_fixed_amount_off | money }}
                                            {% endif %}
                                        </span>
                                      {%- if block.settings.option_1_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                        <span class='quantity-break__compare-price' style="display:none;">
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_1_quantity  | money }}
                                            </span>
                                      {% elsif block.settings.option_1_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                        <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_1_quantity  | money }}
                                            </span>
                                        {% elsif block.settings.option_1_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price == blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.price | times: block.settings.option_1_quantity | money }}
                                      </span>
                                        {% elsif block.settings.option_1_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_1_quantity | money }}
                                      </span>
                                      {% endif %}
                                       {% comment %}
                                      {%- if block.settings.option_1_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {{ product.selected_or_first_available_variant.price | times: block.settings.option_1_quantity | money }}
                                            </span>
                                                {% elsif block.settings.option_1_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_1_quantity | money }} 
                                            </span>
                                        {%- endif -%}
                                      <div style="color: red; font-weight: bold;">TEST BADGE STOCK ICI</div>
                                        {%- unless block.settings.option_1_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {% if product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_1_quantity | money }}
                                                {% else %}
                                                  {{ product.selected_or_first_available_variant.price | times: block.settings.option_1_quantity | money }}
                                                {% endif %}
                                            </span>
                                        {%- endunless -%}
                                      {% endcomment %}
                                    </div>
                                </div>
                                {% if product.has_only_default_variant == false and block.settings.enable_variant_selectors %}
                                  {% if block.settings.option_1_quantity != 1 or block.settings.enable_variant_selectors_on_quantity_of_1 %}
                                    <div class='quantity-break__variants' id="option-1-variant-{{ section.id }}">
                                      {% for selectorItem in (1..block.settings.option_1_quantity) %}
                                        <div class='quantity-break__selector-item'>
                                          <span class='quantity-break__selector-item__number'>#{{ selectorItem }}</span>
                                          <div class='select select--small'>
                                            <select
                                              class="quantity-break__variant-select select__select variant-dropdown"
                                              name="id"
                                              aria-label="Select variant"
                                              onchange="quantityBreakVariantChange(event, {{ block.settings.option_1_quantity }}, {{ forloop.index }})"
                                            >
                                              {% for variant in product.variants %}
                                                <option
                                                  value="{{ variant.id }}"
                                                  data-compare-price="{{ variant.compare_at_price }}"
                                                  data-price="{{ variant.price }}"
                                                  {% if product.selected_or_first_available_variant.id == variant.id %}
                                                    selected
                                                  {% endif %}
                                                    {% if variant.available == false %}disabled{% endif %}
                                                >
                                                  {{ variant.title }}
                                                </option>
                                              {% endfor %}
                                            </select>
                                          </div>
                                        </div>
                                      {% endfor %}
                                    </div>
                                  {% endif %}
                                {% endif %}
                            </label>
                        {% endif %}
                        {% if block.settings.option_2_quantity != 0 %}
                            <input id="quantity2" aria-label="Quantity" type="radio" name="quantity" value="{{ block.settings.option_2_quantity }}" form="{{ product_form_id }}" {% if block.settings.preselected == 'option_2' %} checked{% endif %} {% if product.has_only_default_variant == false and block.settings.option_2_quantity != 1 %}onchange="resetIdInputValue()"{% endif %}>
                            <label for="quantity2" class="quantity-break" data-quantity="{{ block.settings.option_2_quantity }}">
                                {% if block.settings.display_badge == "option_2" %}
                                  <p class='quantity-break__badge'>
                                    {{ block.settings.badge_text }}
                                  </p>
                                {% endif %}
                                <div class='quantity-break__content'>
                                    <div class='quantity-break__left'>
                                        <span class='quantity-break__label'>
                                            <span class='quantity-break__label-text'>
                                              {%- if block.settings.option_2_label != blank -%}
                                                  {{ block.settings.option_2_label }}
                                              {%- else -%}
                                                  Buy {{ block.settings.option_2_quantity }}
                                              {%- endif -%}
                                            </span>
                                            {% if block.settings.option_2_benefit != blank %}
                                              <span class='quantity-break__benefit'>{{ block.settings.option_2_benefit }}</span>
                                            {% endif %}
                                        </span> 
                                          {% if block.settings.option_2_caption != blank %}
                                            {% assign price = product.selected_or_first_available_variant.price %}
                                            {% assign current_variant = product.selected_or_first_available_variant %}
                                            
                                            {% if block.settings.option_2_discount_type == 'none' %}
                                              {% assign item_price_replace = current_variant.price | money %}
                                              {% assign discount_replace = '0' %}
                                            
                                            {% elsif block.settings.option_2_discount_type == 'percentage' %}
                                              {% assign option_2_percentage_left = 100 | minus: block.settings.option_2_percentage_off %}
                                              {% assign item_price_replace = 100
                                                | minus: block.settings.option_2_percentage_off
                                                | divided_by: 100.0
                                                | times: current_variant.price
                                                | money
                                              %}
                                              {% assign discount_replace = block.settings.option_2_percentage_off | append: '%' %}
                                            
                                            {% else %}
                                              {% assign option_2_fixed_amount_off = block.settings.option_2_fixed_amount_off | times: 100.00 %}
                                              {% assign item_price_replace = price
                                                | times: block.settings.option_2_quantity
                                                | minus: option_2_fixed_amount_off
                                                | divided_by: block.settings.option_2_quantity
                                                | money
                                              %}
                                              {% assign discount_replace = option_2_fixed_amount_off | money %}
                                            {% endif %}
                                            <span class="quantity-break__caption">
                                              {{
                                                    block.settings.option_2_caption
                                                    | replace: '[qty]', qty_replace
                                                    | replace: '[discount]', discount_replace
                                                    | replace: '[item_price]', item_price_replace
                                                    | replace: '[total_price]', total_price_replace
                                                  -}}
                                            </span>
                                        {% endif %}
                                    </div>
                                    <div class='quantity-break__right' id="option-2-price-{{ section.id }}">
                                        <span class='quantity-break__price'>
                                            {% assign price = product.selected_or_first_available_variant.price %}
                              
                                            {% if block.settings.option_2_discount_type == 'none' %}
                                              {{ price | times: block.settings.option_2_quantity | money }}
                                            {% elsif block.settings.option_2_discount_type == 'percentage' %}
                                              {% assign option_2_percentage_left = 100 | minus: block.settings.option_2_percentage_off %}
                                              {{ price | times: block.settings.option_2_quantity | times: option_2_percentage_left | divided_by: 100.00 | money }}
                                            {% else %}
                                              {% assign option_2_fixed_amount_off = block.settings.option_2_fixed_amount_off | times: 100.00 %}
                                              {{ price | times: block.settings.option_2_quantity | minus: option_2_fixed_amount_off | money }}
                                            {% endif %}
                                        </span>
                                      {%- if block.settings.option_2_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                        <span class='quantity-break__compare-price' style="display:none;">
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_2_quantity  | money }}
                                            </span>
                                      {% elsif block.settings.option_2_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                        <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_2_quantity  | money }}
                                            </span>
                                        {% elsif block.settings.option_2_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price == blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.price | times: block.settings.option_2_quantity | money }}
                                      </span>
                                        {% elsif block.settings.option_2_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_2_quantity | money }}
                                      </span>
                                      {% endif %}
                                       {% comment %}
                                       {%- if block.settings.option_2_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {{ product.selected_or_first_available_variant.price | times: block.settings.option_2_quantity | money }}
                                            </span>
                                                {% elsif block.settings.option_2_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_2_quantity | money }} 
                                            </span>
                                        {%- endif -%}
                                        {%- unless block.settings.option_2_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {% if product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_2_quantity | money }}
                                                {% else %}
                                                  {{ product.selected_or_first_available_variant.price | times: block.settings.option_2_quantity | money }}
                                                {% endif %}
                                            </span>
                                        {%- endunless -%}
                                      {% endcomment %}
                                    </div>
                                </div>
                                {% if product.has_only_default_variant == false and block.settings.option_2_quantity != 1 and block.settings.enable_variant_selectors %}
                                    <div class='quantity-break__variants' id="option-2-variant-{{ section.id }}">
                                      {% for selectorItem in (1..block.settings.option_2_quantity) %}
                                        <div class='quantity-break__selector-item'>
                                          <span class='quantity-break__selector-item__number'>#{{ selectorItem }}</span>
                                          <div class='select select--small'>
                                            <select
                                              class="quantity-break__variant-select select__select variant-dropdown"
                                              name="id"
                                              aria-label="Select variant"
                                              onchange="quantityBreakVariantChange(event, {{ block.settings.option_2_quantity }}, {{ forloop.index }})"
                                            >
                                              {% for variant in product.variants %}
                                                <option
                                                  value="{{ variant.id }}"
                                                  data-compare-price="{{ variant.compare_at_price }}"
                                                  data-price="{{ variant.price }}"
                                                  {% if product.selected_or_first_available_variant.id == variant.id %}
                                                    selected
                                                  {% endif %}
                                                  {% unless variant.available %}
                                                    disabled
                                                  {% endunless %}
                                                >
                                                  {{ variant.title }}
                                                </option>
                                              {% endfor %}
                                            </select>
                                          </div>
                                        </div>
                                      {% endfor %}
                                    </div>
                                {% endif %}
                            </label>
                        {% endif %}
                        {% if block.settings.option_3_quantity != 0 %}
                            <input id="quantity3" aria-label="Quantity" type="radio" name="quantity" value="{{ block.settings.option_3_quantity }}" form="{{ product_form_id }}" {% if block.settings.preselected == 'option_3' %} checked{% endif %} {% if product.has_only_default_variant == false and block.settings.option_3_quantity != 1 %}onchange="resetIdInputValue()"{% endif %}>
                            <label for="quantity3" class="quantity-break" data-quantity="{{ block.settings.option_3_quantity }}">
                                {% if block.settings.display_badge == "option_3" %}
                                  <p class='quantity-break__badge'>
                                    {{ block.settings.badge_text }}
                                  </p>
                                {% endif %}
                                <div class='quantity-break__content'>
                                    <div class='quantity-break__left'>
                                        <span class='quantity-break__label'>
                                            <span class='quantity-break__label-text'>
                                              {%- if block.settings.option_3_label != blank -%}
                                                  {{ block.settings.option_3_label }}
                                              {%- else -%}
                                                  Buy {{ block.settings.option_3_quantity }}
                                              {%- endif -%}
                                            </span>
                                            {% if block.settings.option_3_benefit != blank %}
                                              <span class='quantity-break__benefit'>{{ block.settings.option_3_benefit }}</span>
                                            {% endif %}
                                        </span> 
                                        {% if block.settings.option_3_caption != blank %}
                                            {% assign price = product.selected_or_first_available_variant.price %}
                                            {% assign current_variant = product.selected_or_first_available_variant %}
                                            
                                            {% if block.settings.option_3_discount_type == 'none' %}
                                              {% assign item_price_replace = current_variant.price | money %}
                                              {% assign discount_replace = '0' %}
                                            
                                            {% elsif block.settings.option_3_discount_type == 'percentage' %}
                                              {% assign option_3_percentage_left = 100 | minus: block.settings.option_3_percentage_off %}
                                              {% assign item_price_replace = 100
                                                | minus: block.settings.option_3_percentage_off
                                                | divided_by: 100.0
                                                | times: current_variant.price
                                                | money
                                              %}
                                              {% assign discount_replace = block.settings.option_3_percentage_off | append: '%' %}
                                            
                                            {% else %}
                                              {% assign option_3_fixed_amount_off = block.settings.option_3_fixed_amount_off | times: 100.00 %}
                                              {% assign item_price_replace = price
                                                | times: block.settings.option_3_quantity
                                                | minus: option_3_fixed_amount_off
                                                | divided_by: block.settings.option_3_quantity
                                                | money
                                              %}
                                              {% assign discount_replace = option_3_fixed_amount_off | money %}
                                            {% endif %}
                                            <span class="quantity-break__caption">
                                              {{
                                                    block.settings.option_3_caption
                                                    | replace: '[qty]', qty_replace
                                                    | replace: '[discount]', discount_replace
                                                    | replace: '[item_price]', item_price_replace
                                                    | replace: '[total_price]', total_price_replace
                                                  -}}
                                            </span>
                                        {% endif %}
                                    </div>
                                    <div class='quantity-break__right' id="option-3-price-{{ section.id }}">
                                        <span class='quantity-break__price'>
                                            {% assign price = product.selected_or_first_available_variant.price %}
                              
                                            {% if block.settings.option_3_discount_type == 'none' %}
                                              {{ price | times: block.settings.option_3_quantity | money }}
                                            {% elsif block.settings.option_3_discount_type == 'percentage' %}
                                              {% assign option_3_percentage_left = 100 | minus: block.settings.option_3_percentage_off %}
                                              {{ price | times: block.settings.option_3_quantity | times: option_3_percentage_left | divided_by: 100.00 | money }}
                                            {% else %}
                                              {% assign option_3_fixed_amount_off = block.settings.option_3_fixed_amount_off | times: 100.00 %}
                                              {{ price | times: block.settings.option_3_quantity | minus: option_3_fixed_amount_off | money }}
                                            {% endif %}
                                        </span>
                                          {%- if block.settings.option_3_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                        <span class='quantity-break__compare-price' style="display:none;">
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_3_quantity  | money }}
                                            </span>
                                      {% elsif block.settings.option_3_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                        <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_3_quantity  | money }}
                                            </span>
                                        {% elsif block.settings.option_3_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price == blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.price | times: block.settings.option_3_quantity | money }}
                                      </span>
                                        {% elsif block.settings.option_3_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_3_quantity | money }}
                                      </span>
                                      {% endif %}
                                       {% comment %}
                                        {%- unless block.settings.option_3_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {% if product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_3_quantity | money }}
                                                {% else %}
                                                  {{ product.selected_or_first_available_variant.price | times: block.settings.option_3_quantity | money }}
                                                {% endif %}
                                            </span>
                                        {%- endunless -%}
                                       {% endcomment %}
                                    </div>
                                </div>
                                {% if product.has_only_default_variant == false and block.settings.option_3_quantity != 1 and block.settings.enable_variant_selectors %}
                                    <div class='quantity-break__variants' id="option-3-variant-{{ section.id }}">
                                      {% for selectorItem in (1..block.settings.option_3_quantity) %}
                                        <div class='quantity-break__selector-item'>
                                          <span class='quantity-break__selector-item__number'>#{{ selectorItem }}</span>
                                          <div class='select select--small'>
                                            <select
                                              class="quantity-break__variant-select select__select variant-dropdown"
                                              name="id"
                                              aria-label="Select variant"
                                              onchange="quantityBreakVariantChange(event, {{ block.settings.option_3_quantity }}, {{ forloop.index }})"
                                            >
                                              {% for variant in product.variants %}
                                                <option
                                                  value="{{ variant.id }}"
                                                  data-compare-price="{{ variant.compare_at_price }}"
                                                  data-price="{{ variant.price }}"
                                                  {% if product.selected_or_first_available_variant.id == variant.id %}
                                                    selected
                                                  {% endif %}
                                                  {% unless variant.available %}
                                                    disabled
                                                  {% endunless %}
                                                >
                                                  {{ variant.title }}
                                                </option>
                                              {% endfor %}
                                            </select>
                                          </div>
                                        </div>
                                      {% endfor %}
                                    </div>
                                {% endif %}
                            </label>
                        {% endif %}
                        {% if block.settings.option_4_quantity != 0 %}
                            <input id="quantity4" aria-label="Quantity" type="radio" name="quantity" value="{{ block.settings.option_4_quantity }}" form="{{ product_form_id }}" {% if block.settings.preselected == 'option_4' %} checked{% endif %} {% if product.has_only_default_variant == false and block.settings.option_4_quantity != 1 %}onchange="resetIdInputValue()"{% endif %}>
                            <label for="quantity4" class="quantity-break" data-quantity="{{ block.settings.option_4_quantity }}">
                                {% if block.settings.display_badge == "option_4" %}
                                  <p class='quantity-break__badge'>
                                    {{ block.settings.badge_text }}
                                  </p>
                                {% endif %}
                                <div class='quantity-break__content'>
                                    <div class='quantity-break__left'>
                                        <span class='quantity-break__label'>
                                            <span class='quantity-break__label-text'>
                                              {%- if block.settings.option_4_label != blank -%}
                                                  {{ block.settings.option_4_label }}
                                              {%- else -%}
                                                  Buy {{ block.settings.option_4_quantity }}
                                              {%- endif -%}
                                            </span>
                                            {% if block.settings.option_4_benefit != blank %}
                                              <span class='quantity-break__benefit'>{{ block.settings.option_4_benefit }}</span>
                                            {% endif %}
                                        </span> 
                                         {% if block.settings.option_4_caption != blank %}
                                            {% assign price = product.selected_or_first_available_variant.price %}
                                            {% assign current_variant = product.selected_or_first_available_variant %}
                                            
                                            {% if block.settings.option_4_discount_type == 'none' %}
                                              {% assign item_price_replace = current_variant.price | money %}
                                              {% assign discount_replace = '0' %}
                                            
                                            {% elsif block.settings.option_4_discount_type == 'percentage' %}
                                              {% assign option_4_percentage_left = 100 | minus: block.settings.option_4_percentage_off %}
                                              {% assign item_price_replace = 100
                                                | minus: block.settings.option_4_percentage_off
                                                | divided_by: 100.0
                                                | times: current_variant.price
                                                | money
                                              %}
                                              {% assign discount_replace = block.settings.option_4_percentage_off | append: '%' %}
                                            
                                            {% else %}
                                              {% assign option_4_fixed_amount_off = block.settings.option_4_fixed_amount_off | times: 100.00 %}
                                              {% assign item_price_replace = price
                                                | times: block.settings.option_4_quantity
                                                | minus: option_4_fixed_amount_off
                                                | divided_by: block.settings.option_4_quantity
                                                | money
                                              %}
                                              {% assign discount_replace = option_4_fixed_amount_off | money %}
                                            {% endif %}
                                            <span class="quantity-break__caption">
                                              {{
                                                    block.settings.option_4_caption
                                                    | replace: '[qty]', qty_replace
                                                    | replace: '[discount]', discount_replace
                                                    | replace: '[item_price]', item_price_replace
                                                    | replace: '[total_price]', total_price_replace
                                                  -}}
                                            </span>
                                        {% endif %}
                                    </div>
                                    <div class='quantity-break__right' id="option-4-price-{{ section.id }}">
                                        <span class='quantity-break__price'>
                                            {% assign price = product.selected_or_first_available_variant.price %}
                              
                                            {% if block.settings.option_4_discount_type == 'none' %}
                                              {{ price | times: block.settings.option_4_quantity | money }}
                                            {% elsif block.settings.option_4_discount_type == 'percentage' %}
                                              {% assign option_4_percentage_left = 100 | minus: block.settings.option_4_percentage_off %}
                                              {{ price | times: block.settings.option_4_quantity | times: option_4_percentage_left | divided_by: 100.00 | money }}
                                            {% else %}
                                              {% assign option_4_fixed_amount_off = block.settings.option_4_fixed_amount_off | times: 100.00 %}
                                              {{ price | times: block.settings.option_4_quantity | minus: option_4_fixed_amount_off | money }}
                                            {% endif %}
                                        </span>
                                      {%- if block.settings.option_4_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                        <span class='quantity-break__compare-price' style="display:none;">
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_4_quantity  | money }}
                                            </span>
                                      {% elsif block.settings.option_4_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                        <span class='quantity-break__compare-price'>
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_4_quantity  | money }}
                                            </span>
                                        {% elsif block.settings.option_4_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price == blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.price | times: block.settings.option_4_quantity | money }}
                                      </span>
                                        {% elsif block.settings.option_4_discount_type != 'none' and product.selected_or_first_available_variant.compare_at_price != blank %}
                                      <span class='quantity-break__compare-price'>
                                        {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_4_quantity | money }}
                                      </span>
                                      {% endif %}
                                       {% comment %}
                                        {%- unless block.settings.option_4_discount_type == 'none' and product.selected_or_first_available_variant.compare_at_price == blank -%}
                                            <span class='quantity-break__compare-price'>
                                                {% if product.selected_or_first_available_variant.compare_at_price != blank %}
                                                  {{ product.selected_or_first_available_variant.compare_at_price | times: block.settings.option_4_quantity | money }}
                                                {% else %}
                                                  {{ product.selected_or_first_available_variant.price | times: block.settings.option_4_quantity | money }}
                                                {% endif %}
                                            </span>
                                        {%- endunless -%}
                                       {% endcomment %}
                                    </div>
                                </div>
                                {% if product.has_only_default_variant == false and block.settings.option_4_quantity != 1 and block.settings.enable_variant_selectors %}
                                    <div class='quantity-break__variants' id="option-4-variant-{{ section.id }}">
                                      {% for selectorItem in (1..block.settings.option_4_quantity) %}
                                        <div class='quantity-break__selector-item'>
                                          <span class='quantity-break__selector-item__number'>#{{ selectorItem }}</span>
                                          <div class='select select--small'>
                                            <select
                                              class="quantity-break__variant-select select__select variant-dropdown"
                                              name="id"
                                              aria-label="Select variant"
                                              onchange="quantityBreakVariantChange(event, {{ block.settings.option_4_quantity }}, {{ forloop.index }})"
                                            >
                                              {% for variant in product.variants %}
                                                <option
                                                  value="{{ variant.id }}"
                                                  data-compare-price="{{ variant.compare_at_price }}"
                                                  data-price="{{ variant.price }}"
                                                  {% if product.selected_or_first_available_variant.id == variant.id %}
                                                    selected
                                                  {% endif %}
                                                  {% unless variant.available %}
                                                    disabled
                                                  {% endunless %}
                                                >
                                                  {{ variant.title }}
                                                </option>
                                              {% endfor %}
                                            </select>
                                          </div>
                                        </div>
                                      {% endfor %}
                                    </div>
                                {% endif %}
                            </label>
                        {% endif %}
                    </div>
                    {% if product.has_only_default_variant == false and block.settings.enable_variant_selectors %}
                      <script>
                        function quantityBreakVariantChange(e, quantity, selectIndex) {
                          const productForm = document.querySelector('product-form');
                          const formIdInput = productForm.querySelector('input[name=id]');
                          const formIdInputValue = formIdInput.value;
                          var formIdInputArrayValue = [];
                          if (formIdInputValue.includes(',')) {
                              formIdInputArrayValue = formIdInputValue.split(',');
                          } else {
                              for (var i =0; i<parseInt(quantity); i++) {
                                  formIdInputArrayValue = [...formIdInputArrayValue, formIdInputValue];
                              }
                          }
                          formIdInputArrayValue[selectIndex - 1] = e.target.value;
                          const formIdInputNewValue = formIdInputArrayValue.join();
                          formIdInput.value = formIdInputNewValue;
                
                          const formMultipleVariantIds = productForm.querySelector('.product-form__multiple-variant-ids');
                          formMultipleVariantIds.innerHTML = '';
                          for (var i=0; i<formIdInputArrayValue.length; i++) {
                              const currentItem = formIdInputArrayValue[i];
                              formMultipleVariantIds.innerHTML += `<input type="hidden" name="items[${i}][quantity]" value="1"><input type="hidden" name="items[${i}][id]" value="${currentItem}">`
                          }
                          if (parseInt(quantity) === 1) formMultipleVariantIds.innerHTML = '';
                        }
    
                        function resetIdInputValue() {
                          const productForm = document.querySelector('product-form');
                          const formIdInput = productForm.querySelector('input[name=id]');
                          const selectedVariantId = formIdInput.dataset.selectedId;
                          formIdInput.value = selectedVariantId;
                          const formMultipleVariantIds = productForm.querySelector('.product-form__multiple-variant-ids');
                          if (formMultipleVariantIds) formMultipleVariantIds.innerHTML = '';
  
                          const variantSelects = document.querySelectorAll('.quantity-break__variant-select');
                          variantSelects.forEach(select => {
                            select.querySelectorAll('option').forEach(option => {
                              option.removeAttribute('selected');
                              if (option.value === selectedVariantId) {
                                option.setAttribute("selected", "");
                              }
                            }) 
                          })
                        }
                      </script>
                    {% endif %}
                {%- else -%}
              <div
                id="Quantity-Form-{{ section.id }}"
                class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}"
                {{ block.shopify_attributes }}
              >
                {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                {% # theme-check-disable %}
                {%- assign cart_qty = cart | item_count_for_variant: product.selected_or_first_available_variant.id -%}
                {% # theme-check-enable %}
                <label class="quantity__label form__label" for="Quantity-{{ section.id }}">
                  {{ 'products.product.quantity.label' | t }}
                  <span class="quantity__rules-cart no-js-hidden{% if cart_qty == 0 %} hidden{% endif %}">
                    {%- render 'loading-spinner' -%}
                    <span>({{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}})</span>
                  </span>
                </label>
                <div class="price-per-item__container">
                  <quantity-input class="quantity" data-url="{{ product.url }}" data-section="{{ section.id }}">
                    <button class="quantity__button no-js-hidden" name="minus" type="button">
                      <span class="visually-hidden">
                        {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-minus' %}
                    </button>
                    <input
                      class="quantity__input"
                      type="number"
                      name="quantity"
                      id="Quantity-{{ section.id }}"
                      data-cart-quantity="{{ cart_qty }}"
                      data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                        data-max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                        max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                      {% endif %}
                      step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
                      value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                      form="{{ product_form_id }}"
                    />
                    <button class="quantity__button no-js-hidden" name="plus" type="button">
                      <span class="visually-hidden">
                        {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                      </span>
                      {% render 'icon-plus' %}
                    </button>
                  </quantity-input>
                  {%- liquid
                    assign volume_pricing_array = product.selected_or_first_available_variant.quantity_price_breaks | sort: 'quantity' | reverse
                    assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.min
                    if cart_qty > 0
                      assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.increment
                    endif

                  -%}
                  {%- if product.quantity_price_breaks_configured? -%}
                    <price-per-item class="no-js-hidden" id="Price-Per-Item-{{ section.id }}" data-section-id="{{ section.id }}" data-variant-id="{{ product.selected_or_first_available_variant.id }}">
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                        {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                        <div class="price-per-item">
                          {%- if variant_price_compare -%}
                            <dl class="price-per-item--current">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="variant-item__old-price">
                                  {{ variant_price_compare | money_with_currency }}
                                </s>
                              </dd>
                            </dl>
                          {%- endif -%}
                          {%- if current_qty_for_volume_pricing < volume_pricing_array.last.minimum_quantity -%}
                            {%- assign variant_price = product.selected_or_first_available_variant.price | money_with_currency -%}
                            <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                          {%- else -%}
                            {%- for price_break in volume_pricing_array -%}
                              {%- if current_qty_for_volume_pricing >= price_break.minimum_quantity -%}
                                {%- assign price_break_price = price_break.price | money_with_currency -%}
                                <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: price_break_price }}</span>
                                {%- break -%}
                              {%- endif -%}
                            {%- endfor -%}
                          {%- endif -%}
                        </div>
                      {%- else -%}
                        {%- assign variant_price = product.selected_or_first_available_variant.price | money_with_currency -%}
                        {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                        <div class="price-per-item">
                          {%- if variant_price_compare -%}
                            <dl class="price-per-item--current">
                              <dt class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </dt>
                              <dd>
                                <s class="variant-item__old-price">
                                  {{ variant_price_compare | money_with_currency }}
                                </s>
                              </dd>
                              <dt class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </dt>
                              <dd>
                                <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                              </dd>
                            </dl>
                          {%- else -%}
                            <span class="price-per-item--current">{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}</span>
                          {%- endif -%}
                        </div>
                      {%- endif -%}
                    </price-per-item>
                  {%- endif -%}
                </div>
                {% if product.available %}
  <!-- ✅ Badge de disponibilité stylisé -->
  <div style="display: flex; align-items: center; gap: 8px; margin-top: 12px; font-family: 'Helvetica Neue', sans-serif; font-size: 14px; font-weight: 600; color: #1B873F;">
    <span style="display: inline-block; width: 10px; height: 10px; background-color: #1B873F; border-radius: 50%; box-shadow: 0 0 0 rgba(27, 135, 63, 0.4); animation: pulse 1.5s infinite;"></span>
    <span id="stock-status-text">In stock! Ready for delivery</span>
  </div>

  <!-- ✅ Animation de pulsation -->
  <style>
    @keyframes pulse {
      0% { box-shadow: 0 0 0 0 rgba(27, 135, 63, 0.4); }
      70% { box-shadow: 0 0 0 10px rgba(27, 135, 63, 0); }
      100% { box-shadow: 0 0 0 0 rgba(27, 135, 63, 0); }
    }
  </style>

  <!-- ✅ Script multilingue -->
  <script>
    (function(){
      const translations = {
        fr: "En stock ! Prêt pour la livraison",
        en: "In stock! Ready for delivery",
        es: "¡En stock! Listo para la entrega",
        de: "Auf Lager! Bereit zur Lieferung",
        it: "Disponibile! Pronto per la consegna",
        pt: "Em estoque! Pronto para entrega",
        nl: "Op voorraad! Klaar voor levering",
        ja: "在庫あり！配送の準備ができています",
        ko: "재고 있음! 배송 준비 완료",
        zh: "有现货！准备发货",
        ru: "В наличии! Готов к доставке",
        ar: "متوفر! جاهز للتوصيل"
      };
      const langTag = document.documentElement.lang || navigator.language;
      const lang = langTag.slice(0, 2);
      const el = document.getElementById("stock-status-text");
      if (el) {
        el.textContent = translations[lang] || translations["en"];
      }
    })();
  </script>
{% endif %}

                <div class="quantity__rules caption no-js-hidden" id="Quantity-Rules-{{ section.id }}">
                  {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.multiples_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.minimum_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.maximum_of'
                        | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                      -}}
                    </span>
                  {%- endif -%}
                </div>
                {%- if product.quantity_price_breaks_configured? -%}
                  <volume-pricing class="parent-display no-js-hidden" id="Volume-{{ section.id }}">
                    {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                      <span class="caption-large">{{ 'products.product.volume_pricing.title' | t }}</span>
                      <ul class="list-unstyled no-js-hidden">
                        <li>
                          <span>{{ product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                          {%- assign price = product.selected_or_first_available_variant.price | money_with_currency -%}
                          <span data-text="{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}">{{ 'sections.quick_order_list.each' | t: money: price }}</span>
                        </li>
                        {%- for price_break in product.selected_or_first_available_variant.quantity_price_breaks -%}
                          {%- assign price_break_price = price_break.price | money_with_currency -%}
                          <li class="{%- if forloop.index >= 3 -%}show-more-item hidden{%- endif -%}">
                            <span>{{ price_break.minimum_quantity }}<span aria-hidden="true">+</span></span>
                            <span data-text="{{ 'products.product.volume_pricing.price_at_each' | t: price: price_break_price }}">{{ 'sections.quick_order_list.each' | t: money: price_break_price }}</span>
                          </li>
                        {%- endfor -%}
                      </ul>
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size >= 3 -%}
                        <show-more-button>
                          <button
                            class="button-show-more link underlined-link"
                            id="Show-More-{{ section.id }}"
                            type="button"
                          >
                            <span class="label-show-more label-text"
                              ><span aria-hidden="true">+ </span>{{ 'products.facets.show_more' | t }}
                            </span>
                          </button>
                        </show-more-button>
                    {%- endif -%}
                  {%- endif -%}
                  </volume-pricing>
                {%- endif -%}
              </div>
                                      {% endif %}

               {%- when 'size-chart' -%}
                <modal-opener
                  class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                  data-modal="#PopupModal-{{ block.id }}"
                  {{ block.shopify_attributes }}
                >
                  <button
                    id="ProductPopup-{{ block.id }}"
                    class="product-popup-modal__button link"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    {{ block.settings.text | default: block.settings.page.title }}
                  </button>
                </modal-opener>
                <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">
                  {{- block.settings.text -}}
                </a>
                            
              {%- when 'popup' -%}
                <modal-opener
                  class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                  data-modal="#PopupModal-{{ block.id }}"
                  {{ block.shopify_attributes }}
                >
                  <button
                    id="ProductPopup-{{ block.id }}"
                    class="product-popup-modal__button link"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    {{ block.settings.text | default: block.settings.page.title }}
                  </button>
                </modal-opener>
                <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">
                  {{- block.settings.text -}}
                </a>
              {%- when 'share' -%}
                {% assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin %}
                {% render 'share-button', block: block, share_link: share_url %}

              {%- when 'variant_picker' -%}
                      <style>
                            .form__label-{{block.id}} {
                            font-weight: {{block.settings.font_style}};
                            font-size: {{block.settings.font_size}}px;
                        }
                      </style>
                            {%- capture size_chart_title -%}
                        {{ block.settings.chart_id }} <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-size-chart" viewBox="0 0 64 64" style="width: 24px;height: 24px;vertical-align: text-top;"><defs><style>.a{fill:none;stroke:#000;stroke-width:2px}</style></defs><path class="a" d="M22.39 33.53c-7.46 0-13.5-3.9-13.5-8.72s6-8.72 13.5-8.72 13.5 3.9 13.5 8.72a12 12 0 0 1-.22 1.73"></path><ellipse cx="22.39" cy="24.81" rx="3.28" ry="2.12"></ellipse><path class="a" d="M8.89 24.81V38.5c0 7.9 6.4 9.41 14.3 9.41h31.92V33.53H22.39M46.78 33.53v7.44M38.65 33.53v7.44M30.52 33.53v7.44M22.39 33.53v7.44"></path></svg>
                      {%- endcapture -%}
                      
                     
                {%- unless product.has_only_default_variant -%}
                  {%- if block.settings.picker_type == 'button' -%}
                    <variant-radios
                      id="variant-radios-{{ section.id }}"
                      class="no-js-hidden"
                      data-section="{{ section.id }}"
                      data-url="{{ product.url }}"
                      {% if update_url == false %}
                        data-update-url="false"
                      {% endif %}
                      {{ block.shopify_attributes }}
                    >
                      {%- for option in product.options_with_values -%}
                        <fieldset class="js product-form__input">
                          {%- liquid
                            assign optionNames = block.settings.optionName | split: ','
                            assign useColor = false
                            for optionColor in optionNames
                              if optionColor == option.name
                                assign useColor = true
                                break
                              endif
                            endfor
                          -%}
                          {%- if useColor -%}
                             {%- liquid
                              assign is_size = false
                              assign size_trigger = block.settings.size_trigger | downcase | replace: ' ', '-'
                              assign downcased_option = option.name | downcase | replace: ' ', '-'
                            
                              if downcased_option == size_trigger
                                assign is_size = true
                              endif
                            -%}
                            <div style="display: flex;align-items: center;width:100%;align-items: baseline;">
                            <legend class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}">
                              {{ option.name }}:
                              <span id="atc selected-{{ option.name | downcase | replace: ' ', '-' }}"> </span>
                              {{- option.selected_value }}
                            </legend>
                        
                            {% if is_size %}
                            <span style="padding: 0 4px 0 10px;">—</span>
                            <span>
                              <modal-opener
                                  class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                                  data-modal="#PopupModal-{{ block.id }}"
                                 style="display:flex;"
                                >
                                  <button
                                    id="ProductPopup-{{ block.id }}"
                                    class="form__label form__label-variant_picker product-popup-modal__button link lumin-popup"
                                    style="min-height: 0.5rem;margin-bottom: 0;"
                                    type="button"
                                    aria-haspopup="dialog"
                                  >
                                    {{ size_chart_title }}
                                  </button>
                                </modal-opener>
                                <a href="{{ block.settings.size_page.url }}" class="product-popup-modal__button link no-js">
                                  {{- block.settings.text -}}
                                </a>
                                  <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
                                      <div
                                        role="dialog"
                                        aria-label="{{ block.settings.text }}"
                                        aria-modal="true"
                                        class="product-popup-modal__content"
                                        tabindex="-1"
                                      >
                                        <button
                                          id="ModalClose-{{ block.id }}"
                                          type="button"
                                          class="product-popup-modal__toggle"
                                          aria-label="{{ 'accessibility.close' | t }}"
                                        >
                                          {% render 'icon-close' %}
                                        </button>
                                        <div class="product-popup-modal__content-info">
                                          <h1 class="h2">{{ block.settings.chart_id }}</h1>
                                          {{ block.settings.size_page.content }}
                                        </div>
                                      </div>
                                    </modal-dialog>
                            </span>
                              {% endif %}
                            </div>

                            {%- liquid
                              assign variants_available_arr = product.variants | map: 'available'
                              assign variants_option1_arr = product.variants | map: 'option1'
                              assign variants_option2_arr = product.variants | map: 'option2'
                              assign variants_option3_arr = product.variants | map: 'option3'

                              assign product_form_id = 'product-form-' | append: section.id

                              assign swatchType = block.settings.swatchType
                              assign swatchStyle = block.settings.swatchStyle
                              assign swatchSize = block.settings.swatchSize
                              assign swatchHeight = block.settings.swatchHeight
                              assign swatchColors = settings.swatchColors | newline_to_br | split: '<br />'
                            -%}

                            <style>
                              .product-form__input input[type='radio'] + label.color-swatch,
                              .product-form__input input[type='radio'] + label.color-swatch:after,
                              .product-form__input input[type='radio'] + label.color-swatch:before{
                                      border-radius: 0;
                              }
                              .product-form__input input[type='radio'] + label.color-swatch.round,
                              .product-form__input input[type='radio'] + label.color-swatch.round:after,
                              .product-form__input input[type='radio'] + label.color-swatch.round:before{
                                  border-radius: 100%;
                                }
                              .product-form__input input[type='radio'] + label.color-swatch.round-corners,
                              .product-form__input input[type='radio'] + label.color-swatch.round-corners:after,
                              .product-form__input input[type='radio'] + label.color-swatch.round-corners:before{
                                      border-radius: 5px;
                                }
                                .product-form__input input[type='radio'] + label.color-swatch{
                                  border:1px rgb(214,214,214) solid;
                                  width: {{swatchSize}}px;
                                  height: {{swatchSize}}px;
                                  background-repeat: no-repeat;
                                  background-position: center;
                                  background-size: cover;
                                  margin-right: 9px;
                                  padding:0;
                                  box-shadow: inset 0 2px 1px #0003;
                                }

                                .product-form__input input[type='radio'] + label.color-swatch:before{
                                  content: "";
                                  position: absolute;
                                  top: -1px;
                                  left: -1px;
                                  width: calc(100% + 2px);
                                  height: calc(100% + 2px);
                                  border: 0.1rem rgb(247 247 247) solid;
                                  z-index: 0;
                                }
                                .product-form__input input[type='radio'] + label.color-swatch:after{
                                  content: "";
                                  position: absolute;
                                  top: 0;
                                  left: 0;
                                  width: 100%;
                                  height: 100%;
                                  z-index: 1;
                                  {%- if settings.dark or swatchType == "variantImage" -%}
                                     border: none;
                                  {%- else -%}
                                    border: 0px rgb(48 48 48) solid;
                                  {%- endif -%}
                                }
                              .product-form__input input[type=radio]:checked+.color-swatch {
                                    background-color: rgb(var(--color-foreground), .05);
                                    color: rgb(var(--color-foreground));
                                    border: 3px solid var(--swatch-color) !important;
                                    box-shadow: 0 0 #000, inset 0 0 0 4px #fff;
                                }
                                .product-form__input input[type='radio'] + label.color-swatch:hover:before{
                                  border: 1px rgb(125 124 124) solid;
                                }
                                .product-form__input input[type='radio']:checked + label.color-swatch:before{
                                {%- if settings.dark -%}
                                  box-shadow: 0 0 0 1px rgb(var(--color-foreground));
                                  {%- else -%}
                                  box-shadow: 0 0 0 1px rgb(var(--color-foreground));
                                  {%- endif -%}
                                  border-color:rgb(var(--color-foreground));
                                }
                                .product-form__input input[type='radio'] + label.color-swatch.variant-swatch{
                                  background-color:white;
                                  {%- if swatchStyle == "portrait" -%}
                                  height: {{swatchHeight}}px;
                                  {%- endif -%}
                                }
                                .product-form__input input[type='radio'].disabled+label.color-swatch:before {
                                   top: 50%;
                                  height: .1rem;
                                  clip-path: unset;
                                  z-index: 2;
                                  transform: translateY(-50%) rotate(-45deg);
                                  border-radius: 0;
                                  box-shadow: none;
                                  border-color: #acacac;
                              }
                                /* {%- if settings.dark or swatchType == "variantImage" -%}
                                .product-form__input input[type=radio]:checked+.color-swatch {
                                     box-shadow: none !important;
                                }
                                {%- endif -%}*/
                            </style>

                            {%- for value in option.values -%}
                              {%- liquid
                                assign option_disabled = true

                                for option1_name in variants_option1_arr
                                  case option.position
                                    when 1
                                      if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                    when 2
                                      if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                    when 3
                                      if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                  endcase
                                endfor
                              -%}

                              {%- if block.settings.picker_type == 'button' -%}
                              <input
                                  type="radio"
                                  id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                  name="{{ option.name }}"
                                  value="{{ value | escape }}"
                                  form="{{ product_form_id }}"
                                  {% if option.selected_value == value %}
                                    checked
                                  {% endif %}
                                  {% if option_disabled %}
                                    class="disabled"
                                  {% endif %}
                                >
                                {%- if swatchType == 'variantImage' -%}
                                  <label
                                    data-{{ option.name | downcase | replace: ' ', '-' }}="{{value}}"
                                    style="
                                      background-image:url(
                                        {%- liquid
                                          assign optionIndex = option.position | minus: 1
                                          for variant in product.variants
                                              if variant.options[optionIndex] == value
                                                assign swatchSizePortrait = swatchSize | times: 2
                                                echo variant.image | image_url: width: swatchSizePortrait
                                                break
                                              endif
                                          endfor
                                      -%}
                                         );
                                    "
                                    class="color-swatch variant-swatch {% case swatchStyle %}{% when "round" %}round{% when "square-round-corners" %}round-corners{% endcase %}"
                                    for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                  >
                                    <span class="visually-hidden">
                                      {{- 'products.product.variant_sold_out_or_unavailable' | t -}}
                                    </span>
                                  </label>
                                {%- else -%}
                                  {%- liquid
                                    for colorData in swatchColors
                                      assign colorDataArr = colorData | split: ':'
                                      assign ruleName = colorDataArr[0] | strip
                                      assign colorImg = value | append: '.png'
                                      if value == ruleName
                                        assign colorCodes = colorDataArr[1] | strip | split: '#'
                                        assign colorNumber = 0 | plus: colorCodes.size
                                        break
                                      endif
                                    endfor
                                  -%}
                                  <label
                                    data-{{ option.name | downcase | replace: ' ', '-' }}="{{value}}"
                                    style="
                                      background: {{ value }}; background-image:url({{ colorImg | downcase | replace: ' ', '-' | file_img_url: '120x120' }});
                                      {%- case colorNumber -%}

                                          {%- when 2 -%}
                                              background-color: #{{ colorCodes[1] }};
                                          {%- when 3 -%}
                                              background: linear-gradient(135deg, #{{ colorCodes[1] }} 50%, #{{ colorCodes[2] }} 50%);
                                          {%- when 4 -%}
                                              background: linear-gradient(to right,#{{ colorCodes[1] }} 33%,#{{ colorCodes[2] }} 33%,#{{ colorCodes[2] }} 66%, #{{ colorCodes[3] }} 66%);
                                          {%- else -%}
                                              background-image:url({{ colorImg | downcase | replace: ' ', '-' | file_img_url }});
                                          {%- endcase -%}
                                    "
                                    class="color-swatch {% case swatchStyle %}{% when "round" %}round{% when "square-round-corners" %}round-corners{% endcase %}"
                                    for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                  >
                                    <span class="visually-hidden">
                                      {{- 'products.product.variant_sold_out_or_unavailable' | t -}}
                                    </span>
                                  </label>
                                  {%- assign colorCodes = '' -%}
                                {%- endif -%}
                              {%- elsif block.settings.picker_type == 'dropdown' -%}
                                <option
                                  value="{{ value | escape }}"
                                  {% if option.selected_value == value %}
                                    selected="selected"
                                  {% endif %}
                                >
                                  {% if option_disabled -%}
                                    {{- 'products.product.value_unavailable' | t: option_value: value -}}
                                  {%- else -%}
                                    {{- value -}}
                                  {%- endif %}
                                </option>
                              {%- endif -%}
                            {%- endfor -%}

                            <script>
                              document.querySelectorAll('input+label[data-{{ option.name | downcase | replace: ' ', '-'  }}]').forEach(el=>{
                                el.addEventListener('click',()=>{
                                  document.querySelector('#selected-{{ option.name | downcase | replace: ' ', '-'  }}').textContent = " "+el.getAttribute('data-{{ option.name | downcase | replace: ' ', '-'  }}')
                                })
                              })
                            </script>
                          {%- else -%}
                            {%- liquid
                              assign is_size = false
                              assign size_trigger = block.settings.size_trigger | downcase | replace: ' ', '-'
                              assign downcased_option = option.name | downcase | replace: ' ', '-'
                            
                              if downcased_option == size_trigger
                                assign is_size = true
                              endif
                            -%}
                            <div style="display: flex;align-items: center;width:100%;align-items: baseline;">
                            <legend class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %} ">
                              {{ option.name }}:
                              <span id="selected-{{ option.name | downcase | replace: ' ', '-' }}"> </span>
                              {{- option.selected_value -}}
                            </legend>


  
                              {% if is_size %}
                            <span style="padding: 0 4px 0 10px;">—</span>
                            <span>
                             <modal-opener
                                  class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                                  data-modal="#PopupModal-{{ block.id }}"
                                 style="display:flex;"
                                >
                                  <button
                                    id="ProductPopup-{{ block.id }}"
                                    class="form__label form__label-variant_picker product-popup-modal__button link lumin-popup"
                                    style="min-height: 0.5rem;margin-bottom: 0;"
                                    type="button"
                                    aria-haspopup="dialog"
                                  >
                                    {{ size_chart_title }}
                                  </button>
                                </modal-opener>
                                <a href="{{ block.settings.size_page.url }}" class="product-popup-modal__button link no-js">
                                  {{- block.settings.text -}}
                                </a>
                                  <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
                                      <div
                                        role="dialog"
                                        aria-label="{{ block.settings.text }}"
                                        aria-modal="true"
                                        class="product-popup-modal__content"
                                        tabindex="-1"
                                      >
                                        <button
                                          id="ModalClose-{{ block.id }}"
                                          type="button"
                                          class="product-popup-modal__toggle"
                                          aria-label="{{ 'accessibility.close' | t }}"
                                        >
                                          {% render 'icon-close' %}
                                        </button>
                                        <div class="product-popup-modal__content-info">
                                          <h1 class="h2">{{ block.settings.chart_id }}</h1>
                                          {{ block.settings.size_page.content }}
                                        </div>
                                      </div>
                                    </modal-dialog>
                            </span>
                              {% endif %}


                              
                            </div>
                            {% render 'product-variant-options', product: product, option: option, block: block %}
                          {%- endif -%}
                        </fieldset>
                      {%- endfor -%}
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    </variant-radios>
                  {%- else -%}
                    <variant-selects
                      id="variant-selects-{{ section.id }}"
                      class="no-js-hidden"
                      data-section="{{ section.id }}"
                      data-url="{{ product.url }}"
                      {% if update_url == false %}
                        data-update-url="false"
                      {% endif %}
                      {{ block.shopify_attributes }}
                    >
                      {%- for option in product.options_with_values -%}
                         {%- liquid
                              assign is_size = false
                              assign size_trigger = block.settings.size_trigger | downcase | replace: ' ', '-'
                              assign downcased_option = option.name | downcase | replace: ' ', '-'
                            
                              if downcased_option == size_trigger
                                assign is_size = true
                              endif
                            -%}
                        <div class="product-form__input product-form__input--dropdown">
                           <div style="display: flex;align-items: center;width:100%;align-items: baseline;">
                          <label class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                            {{ option.name }}
                          </label>

                          
                            {% if is_size %}
                            <span style="padding: 0 4px 0 10px;">—</span>
                            <span>
                              <modal-opener
                                  class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                                  data-modal="#PopupModal-{{ block.id }}"
                                 style="display:flex;"
                                >
                                  <button
                                    id="ProductPopup-{{ block.id }}"
                                    class="form__label form__label-variant_picker product-popup-modal__button link lumin-popup"
                                    style="min-height: 0.5rem;margin-bottom: 0;"
                                    type="button"
                                    aria-haspopup="dialog"
                                  >
                                    {{ size_chart_title }}
                                  </button>
                                </modal-opener>
                                <a href="{{ block.settings.size_page.url }}" class="product-popup-modal__button link no-js">
                                  {{- block.settings.text -}}
                                </a>
                                  <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
                                      <div
                                        role="dialog"
                                        aria-label="{{ block.settings.text }}"
                                        aria-modal="true"
                                        class="product-popup-modal__content"
                                        tabindex="-1"
                                      >
                                        <button
                                          id="ModalClose-{{ block.id }}"
                                          type="button"
                                          class="product-popup-modal__toggle"
                                          aria-label="{{ 'accessibility.close' | t }}"
                                        >
                                          {% render 'icon-close' %}
                                        </button>
                                        <div class="product-popup-modal__content-info">
                                          <h1 class="h2">{{ block.settings.chart_id }}</h1>
                                          {{ block.settings.size_page.content }}
                                        </div>
                                      </div>
                                    </modal-dialog>
                            </span>
                              {% endif %}
                            </div>

                             
                          <div class="select">
                            <select
                              id="Option-{{ section.id }}-{{ forloop.index0 }}"
                              class="select__select"
                              name="options[{{ option.name | escape }}]"
                              form="{{ product_form_id }}"
                            >
                              {% render 'product-variant-options', product: product, option: option, block: block %}
                            </select>
                            {% render 'icon-caret' %}
                          </div>
                        </div>
                      {%- endfor -%}

                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    </variant-selects>
                  {%- endif -%}
                {%- endunless -%}

                <noscript class="product-form__noscript-wrapper-{{ section.id }}">
                  <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                    <label class="form__label form__label-{{block.id}}{% if block.settings.label_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.label_style == 'subtitle' %} subtitle{% endif %}" for="Variants-{{ section.id }}">
                      {{- 'products.product.product_variants' | t -}}
                    </label>
                    <div class="select">
                      <select
                        name="id"
                        id="Variants-{{ section.id }}"
                        class="select__select"
                        form="{{ product_form_id }}"
                      >
                        {%- for variant in product.variants -%}
                          <option
                            {% if variant == product.selected_or_first_available_variant %}
                              selected="selected"
                            {% endif %}
                            {% if variant.available == false %}
                              disabled
                            {% endif %}
                            value="{{ variant.id }}"
                          >
                            {%- liquid
                              echo variant.title
                              echo variant.price | money | strip_html | prepend: ' - '
                              if variant.available == false
                                echo 'products.product.sold_out' | t | prepend: ' - '
                              endif
                              if variant.quantity_rule.increment > 1
                                echo 'products.product.quantity.multiples_of' | t: quantity: variant.quantity_rule.increment | prepend: ' - '
                              endif
                              if variant.quantity_rule.min > 1
                                echo 'products.product.quantity.minimum_of' | t: quantity: variant.quantity_rule.min | prepend: ' - '
                              endif
                              if variant.quantity_rule.max != null
                                echo 'products.product.quantity.maximum_of' | t: quantity: variant.quantity_rule.max | prepend: ' - '
                              endif
                              # TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter
                              # theme-check-disable
                              assign cart_quantity = cart | item_count_for_variant: variant.id
                              # theme-check-enable
                              if cart_quantity > 0
                                echo 'products.product.quantity.in_cart_html' | t: quantity: cart_quantity | prepend: ' - '
                              endif
                            -%}
                          </option>
                        {%- endfor -%}
                      </select>
                      {% render 'icon-caret' %}
                    </div>
                  </div>
                </noscript>

  {% assign variant_picker_block = block %}


              {%- when 'buy_buttons' -%}
                {% if block.settings.show_full_button %}
                  <style>
                    .product-form__buttons {
                       display: block;
                    }
                    .product-form__submit {
                        margin-bottom: 1rem;
                      }
                  </style>
                {% endif %}
                   
                  <style>
                     :root {
                        --lm-button-box: {{ block.settings.lm_main_button.red }},{{ block.settings.lm_main_button.green }},{{ block.settings.lm_main_button.blue }};
                  }
                  .lm-main-button {
                      background-color: {{block.settings.lm_main_button}};
                      background: {{block.settings.lm_main_button_gr}};
                      color: {{block.settings.lm_main_text}};
                  }
                    .lm-main-button::after {
                      box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset))
                      rgba(var(--color-button-text), var(--border-opacity)),
                      0 0 0 var(--buttons-border-width) rgb(255 204 4 / 0%);
                    }
                   .lm-main-button:not([disabled]):hover:after {
                       box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset))
                      rgba(var(--color-button-text), var(--border-opacity)),
                      0 0 0 var(--buttons-border-width) rgb(255 204 4 / 0%);
                    }
                   {% unless block.settings.lm_button_animation == 'none' %}
                    {% if block.settings.lm_button_animation == 'soft' %}
                    .lm-main-button {
                        position: relative;
                        overflow: hidden;
                    }
                    
                    .lm-main-button::before {
                        content: '';
                        position: absolute;
                        z-index:0;
                        top: 0;
                        left: -105%;
                        width: 100%;
                        height: 100%;
                        background: linear-gradient(90deg, rgba(255,255,255,0.2), rgba(255,255,255,0.8), rgba(255,255,255,0.2));
                        transform: skewX(-20deg);
                        transition: all 0.5s ease-in-out;
                    }
                    
                    .lm-main-button:hover::before {
                        left: 105%;
                    }
                    {% elsif block.settings.lm_button_animation == 'ripple' %}
                      .lm-main-button {
                            position: relative;
                            overflow: hidden;
                        }
                        
                        .lm-main-button::before {
                            content: '';
                            position: absolute;
                            z-index: 0;
                            top: 100%;
                            left: -100%;
                            width: 200%;
                            height: 300%;
                            background: rgb(var(--lm-button-box), .1);
                            transform: rotate(304deg);
                            animation: diagonal-swipe 2s infinite linear;
                        }
                        
                        @keyframes diagonal-swipe {
                            0% {
                                top: -100%;
                                left: -100%;
                            }
                            100% {
                                top: 100%;
                                left: 100%;
                            }
                        }

           {% elsif block.settings.lm_button_animation == 'fade' %}
                      .lm-main-button {
                          position: relative;
                          background: {{block.settings.lm_main_button}};
                          animation: blink-bg 1.5s infinite;
                      }
                      
                      @keyframes blink-bg {
                          0%, 100% {
                              background-color: {{block.settings.lm_main_button}};
                          }
                          50% {
                              background-color: rgb(var(--lm-button-box), 0.6);
                          }
                      }
                    {% elsif block.settings.lm_button_animation == 'bubble' %}
                      .lm-main-button {
                        position: relative;
                        overflow: hidden;
                    }
                    
                    .lm-main-button::before {
                        content: '';
                        position: absolute;
                        z-index:0;
                        top: 100%;
                        left: 50%;
                        width: 20px;
                        height: 20px;
                        background: rgba(52, 152, 219, 0.5);
                        border-radius: 50%;
                        animation: bubble-float 4s infinite ease-in-out;
                    }
                    
                    @keyframes bubble-float {
                        0% {
                            top: 100%;
                            opacity: 0;
                            transform: scale(0.5);
                        }
                        50% {
                            opacity: 0.8;
                            transform: scale(1);
                        }
                        100% {
                            top: -20%;
                            opacity: 0;
                        }
                    }

                    
             {% elsif block.settings.lm_button_animation == 'wave' %}
                    .lm-main-button{
                            position: relative;
                            overflow: hidden;
                        }
                        
                        .lm-main-button::before {
                            content: '';
                            position: absolute;
                            top: 0;
                            left: -150%;
                           z-index:0;
                            width: 200%;
                            height: 100%;
                            background: linear-gradient(120deg, transparent, rgba(255, 255, 255, 0.3), transparent);
                            animation: wave 2s infinite linear;
                        }
                        
                        @keyframes wave {
                            0% {
                                left: -150%;
                            }
                            100% {
                                left: 150%;
                            }
                        }
                      {% elsif block.settings.lm_button_animation == 'glowing' %}
                    .lm-main-button{
                            position: relative;
                            border: 2px solid transparent;
                            background-clip: padding-box;
                            animation: glowing-border 2s infinite ease-in-out;
                        }
                        
                        @keyframes glowing-border {
                            0%, 100% {
                                border-color: {{block.settings.lm_main_button}};
                                box-shadow: 0 0 10px {{block.settings.lm_main_button}};
                            }
                            50% {
                                border-color: rgb(var(--lm-button-box), 0.4);
                                box-shadow: 0 0 15px rgb(var(--lm-button-box), 0.4);
                            }
                        }
           {% elsif block.settings.lm_button_animation == 'pulse' %}
                      .lm-main-button {
                          position: relative;
                          overflow: hidden;
                          background: linear-gradient(90deg, rgb(var(--lm-button-box)), rgb(var(--lm-button-box), 0.2), rgb(var(--lm-button-box), 0.8));
                          animation: gradient-pulse 2s infinite alternate;
                          background-size: 500% 400%;
                      }
                      
                      @keyframes gradient-pulse {
                          0% {
                              background-position: 0% 50%;
                          }
                          100% {
                              background-position: 100% 50%;
                          }
                      }
          {% elsif block.settings.lm_button_animation == 'flicker' %}
                 .lm-main-button {
                    position: relative;
                    background: {{block.settings.lm_main_button}};
                    box-shadow: 0 0 5px {{block.settings.lm_main_button}};
                    animation: flicker-glow 3s infinite;
                }
                
                @keyframes flicker-glow {
                    0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {
                        opacity: 1;
                        box-shadow: 0 0 10px {{block.settings.lm_main_button}}, 0 0 20px {{block.settings.lm_main_button}};
                    }
                    20%, 24%, 55% {
                        opacity: 0.8;
                        box-shadow: 0 0 5px {{block.settings.lm_main_button}}, 0 0 10px {{block.settings.lm_main_button}};
                    }
                }
         {% elsif block.settings.lm_button_animation == 'slide' %}
                     .lm-main-button {
                      background:{{block.settings.lm_main_button_gr}};
                      background-size: 200% 200%;
                  
                      -webkit-animation: AnimationName 3s ease infinite;
                      -moz-animation: AnimationName 3s ease infinite;
                      animation: AnimationName 3s ease infinite;
                  }
                  
                  @-webkit-keyframes AnimationName {
                      0%{background-position:0% 50%}
                      50%{background-position:100% 50%}
                      100%{background-position:0% 50%}
                  }
                  @-moz-keyframes AnimationName {
                      0%{background-position:0% 50%}
                      50%{background-position:100% 50%}
                      100%{background-position:0% 50%}
                  }
                  @keyframes AnimationName {
                      0%{background-position:0% 50%}
                      50%{background-position:100% 50%}
                      100%{background-position:0% 50%}
                  }

             {% endif %}
              {% endunless %}}
                  
                  </style>
                {%- render 'buy-buttons',
                  block: block,
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}
              {%- when 'rating' -%}
                {%- if product.metafields.reviews.rating.value != blank -%}
                  {% liquid
                    assign rating_decimal = 0
                    assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                    if decimal >= 0.3 and decimal <= 0.7
                      assign rating_decimal = 0.5
                    elsif decimal > 0.7
                      assign rating_decimal = 1
                    endif
                  %}
                  <div
                    class="rating"
                    role="img"
                    aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}"
                  >
                    <span
                      aria-hidden="true"
                      class="rating-star"
                      style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"
                    ></span>
                  </div>
                  <p class="rating-text caption">
                    <span aria-hidden="true">
                      {{- product.metafields.reviews.rating.value }} /
                      {{ product.metafields.reviews.rating.value.scale_max -}}
                    </span>
                  </p>
                  <p class="rating-count caption">
                    <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                    <span class="visually-hidden">
                      {{- product.metafields.reviews.rating_count }}
                      {{ 'accessibility.total_reviews' | t -}}
                    </span>
                  </p>
                {%- endif -%}
              {%- when 'promo-slide' -%}
                <style>
                     .lm-slide-{{block.id}} ul {
                       {% if block.settings.show_border %}border: 1px solid {{block.settings.border_color}};{% endif %}
                       padding: var(--lm-slide-padding);
                       border-radius: {{ block.settings.slide_wrapper_radius }}px;
                       z-index: 0;
                   }
                   .lm-slide-{{block.id}} p {
                       margin: 0;
                       font-size:{{block.settings.text_size}}px;
                   }
                   .lm-slide-{{block.id}} h4 {
                       margin: 0 0 1rem 0;
                       padding: 0 7rem 0 0;
                       font-size:{{block.settings.head_size}}px;
                   }
                   .lumin-slider-buttons {
                         gap: 1rem;
                        /* margin-top: var(--lm-slide-padding);*/
                         z-index: 1;
                         position: absolute;
                         right: calc(5px + var(--lm-slide-padding));
                         top:calc(5px + var(--lm-slide-padding));
                         zoom:0.8;
                     }
                   .lumin-slider-button {
                        /* background: rgba(var(--color-button), 0.3) !important;*/
                         border: 1px solid rgba(var(--color-foreground)) !important;
                         width: 30px !important;
                         height: 30px !important;
                         border-radius: 30px;
                     }
                  .slider-container-{{block.id}} {
                         display: grid;
                         grid-template-columns:  {{block.settings.slide_img_size}}px; 1fr;
                         grid-template-rows: 1fr;
                         gap: 0px 16px;
                       }
                   .slider-container-{{block.id}} img {
                         max-width: {{block.settings.slide_img_size}}px;
                         width: {{block.settings.slide_img_size}}px;
                         height: auto;
                         border-radius: {{block.settings.slide_img_radius}}px;

                     }
                   .slider-container-{{block.id}} svg {
                         max-width: {{block.settings.slide_img_size}}px;
                         width: {{block.settings.slide_img_size}}px;
                         height: auto;
                         border-radius: {{block.settings.slide_img_radius}}px;

                     }
                       .slide-image { grid-area: 1 / 1 / 2 / 3; width: 60px; }
                       .slide-text { grid-area: 1 / 2 / 2 / 3; }
                </style>
                <div style="position: relative;margin-top:{{ block.settings.padding_top }}px;margin-bottom:{{ block.settings.padding_bottom }}px;"  {{ block.shopify_attributes }}>
                  <slideshow-component
                    class="slider-mobile-gutter"
                    style="--lm-slide-padding: {{ block.settings.slide_padding }}px;"
                  >
                    {% liquid
                      if block.settings.show_slide_2 == false and block.settings.show_slide_3 == false
                        assign slide_count = 1
                        assign total_number_of_block = 1
                      elsif block.settings.show_slide_2 and block.settings.show_slide_3 == false
                        assign slide_count = 2
                        assign total_number_of_block = 2
                      elsif block.settings.show_slide_2 and block.settings.show_slide_3
                        assign slide_count = 3
                        assign total_number_of_block = 3
                      elsif block.settings.show_slide_2 == false and block.settings.show_slide_3
                        assign slide_count = 2
                        assign total_number_of_block = 2
                      endif
                    %}
                    {%- assign image_size = block.settings.slide_img_size | times: 2 -%}
                    {%- assign number_of_block = slide_count -%}

                    <div
                      id="Slider-{{ block.id }}"
                      class="grid grid--1-col slider slider--everywhere"
                      role="list"
                      {% if number_of_block > 1 %}
                        aria-label="{{ 'general.slider.name' | t }}"
                      {% endif %}
                    >
                      {%- for i in (1..number_of_block) -%}
                        <div
                          id="Slide-{{ block.id }}-{{ forloop.index }}"
                          class="complementary-slider grid__item slider__slide slideshow__slide lm-slide-{{block.id}} lm-fix"
                          tabindex="-1"
                          role="group"
                          {% if number_of_block > 1 %}
                            aria-roledescription="{{ 'sections.slideshow.slide' | t }}"
                            aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                          {% endif %}
                        >
                          <ul class="list-unstyled color-{{ block.settings.color_scheme }} gradient" role="list">
                            {% if i == 1 %}
                              <li class="slider-container-{{block.id}}">
                                {% if block.settings.slide_image != blank %}
                                  <div class="slide-image">
                                    {{ block.settings.slide_image | image_url: width: image_size | image_tag }}
                                  </div>
                                {% endif %}
                                <div
                                  class="slide-text"
                                  style="{% if block.settings.slide_image == blank %}grid-column-start: 1;{% else %}grid-column-start: 2;{% endif %}"
                                >
                                  <h4>{{ block.settings.block_heading }}</h4>
                                  {{ block.settings.text_1 }}
                                </div>
                              </li>
                            {% elsif i == number_of_block and block.settings.show_slide_3 %}
                              <li class="slider-container-{{block.id}}">
                                {% if block.settings.slide_image_3 != blank %}
                                  <div class="slide-image">
                                    {{ block.settings.slide_image_3 | image_url: width: image_size | image_tag }}
                                  </div>
                                {% endif %}
                                <div
                                  class="slide-text"
                                  style="{% if block.settings.slide_image_3 == blank %}grid-column-start: 1;{% else %}grid-column-start: 2;{% endif %}"
                                >
                                  <h4>{{ block.settings.block_heading_3 }}</h4>
                                  {{ block.settings.text_3 }}
                                </div>
                              </li>
                            {% elsif block.settings.show_slide_2 %}
                              <li class="slider-container-{{block.id}}">
                                {% if block.settings.slide_image_2 != blank %}
                                  <div class="slide-image">
                                    {{ block.settings.slide_image_2 | image_url: width: image_size | image_tag }}
                                  </div>
                                {% endif %}
                                <div
                                  class="slide-text"
                                  style="{% if block.settings.slide_image_2 == blank %}grid-column-start: 1;{% else %}grid-column-start: 2;{% endif %}"
                                >
                                  <h4>{{ block.settings.block_heading_2 }}</h4>
                                  {{ block.settings.text_2 }}
                                </div>
                              </li>
                            {% endif %}
                          </ul>
                        </div>
                      {%- endfor -%}
                    </div>

                    {%- if number_of_block > 1 -%}
                      <div class="slider-buttons no-js-hidden lumin-slider-buttons color-{{ block.settings.color_scheme }} gradient ">
                        <button
                          type="button"
                          class="slider-button slider-button--prev lumin-slider-button"
                          name="previous"
                          aria-label="{{ 'general.slider.previous_slide' | t }}"
                        >
                          {% render 'icon-arro' %}
                        </button>

                        <div class="hidden slider-counter slider-counter--counter {% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                          {%- if block.settings.pagination_style == 'counter' -%}
                            <span class="slider-counter--current">1</span>
                            <span aria-hidden="true"> / </span>
                            <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                            <span class="slider-counter--total">{{ total_number_of_block }}</span>
                          {%- else -%}
                            <div class="slideshow__control-wrapper">
                              {%- for i in (1..number_of_block) -%}
                                <button
                                  class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link"
                                  aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                  aria-controls="Slider-{{ block.id }}"
                                >
                                  {%- if block.settings.pagination_style == 'numbers' -%}
                                    {{ forloop.index }}
                                  {%- else -%}
                                    <span class="dot"></span>
                                  {%- endif -%}
                                </button>
                              {%- endfor -%}
                            </div>
                          {%- endif -%}
                        </div>

                        <button
                          type="button"
                          class="slider-button slider-button--next lumin-slider-button"
                          name="next"
                          aria-label="{{ 'general.slider.next_slide' | t }}"
                        >
                          {% render 'icon-arro' %}
                        </button>
                      </div>
                    {%- endif -%}
                  </slideshow-component>
                </div>

              {%- when 'complementary' -%}
                <product-recommendations
                  class="complementary-products quick-add-hidden no-js-hidden{% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}"
                  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.product_list_limit }}&intent=complementary"
                >
                  {%- if recommendations.performed and recommendations.products_count > 0 -%}
                    <aside
                      aria-label="{{ 'accessibility.complementary_products' | t }}"
                      {{ block.shopify_attributes -}}
                      {% if block.settings.make_collapsible_row %}
                        class="product__accordion accordion"
                      {% endif %}
                    >
                      <div class="complementary-products__container">
                        {%- if block.settings.make_collapsible_row -%}
                          <details id="Details-{{ block.id }}-{{ section.id }}" open>
                            <summary>
                        {%- endif %}
                        <div class="summary__title">
                          {%- if block.settings.make_collapsible_row -%}
                            {% render 'icon-accordion', icon: block.settings.icon %}
                            <h2 class="h4 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- else -%}
                            <h2 class="h3 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- endif -%}
                        </div>
                        {%- if block.settings.make_collapsible_row -%}
                          {% render 'icon-caret' %}
                          </summary>
                        {%- endif -%}
                        <slideshow-component class="slider-mobile-gutter">
                          {%- assign number_of_slides = recommendations.products_count
                            | plus: 0.0
                            | divided_by: block.settings.products_per_page
                            | ceil
                          -%}
                          <div
                            id="Slider-{{ block.id }}"
                            class="contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere"
                            role="list"
                            {% if number_of_slides > 1 %}
                              aria-label="{{ 'general.slider.name' | t }}"
                            {% endif %}
                          >
                            {%- for i in (1..number_of_slides) -%}
                              <div
                                id="Slide-{{ block.id }}-{{ forloop.index }}"
                                class="complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide"
                                tabindex="-1"
                                role="group"
                                {% if number_of_slides > 1 %}
                                  aria-roledescription="{{ 'sections.slideshow.slide' | t }}"
                                  aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                {% endif %}
                              >
                                <ul class="list-unstyled" role="list">
                                  {%- for product in recommendations.products
                                    limit: block.settings.products_per_page
                                    offset: continue
                                  -%}
                                    <li>
                                      {% render 'card-product',
                                        card_product: product,
                                        media_aspect_ratio: block.settings.image_ratio,
                                        show_secondary_image: false,
                                        lazy_load: false,
                                        show_quick_add: block.settings.enable_quick_add,
                                        section_id: section.id,
                                        horizontal_class: true,
                                        horizontal_quick_add: true
                                      %}
                                    </li>
                                  {%- endfor -%}
                                </ul>
                              </div>
                            {%- endfor -%}
                          </div>
                          {%- if number_of_slides > 1 -%}
                            <div class="slider-buttons no-js-hidden">
                              <button
                                type="button"
                                class="slider-button slider-button--prev"
                                name="previous"
                                aria-label="{{ 'general.slider.previous_slide' | t }}"
                              >
                                {% render 'icon-arro' %}
                              </button>
                              <div class="slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                                {%- if block.settings.pagination_style == 'counter' -%}
                                  <span class="slider-counter--current">1</span>
                                  <span aria-hidden="true"> / </span>
                                  <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                                  <span class="slider-counter--total">{{ number_of_slides }}</span>
                                {%- else -%}
                                  <div class="slideshow__control-wrapper">
                                    {%- for i in (1..number_of_slides) -%}
                                      <button
                                        class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link"
                                        aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                        aria-controls="Slider-{{ block.id }}"
                                      >
                                        {%- if block.settings.pagination_style == 'numbers' -%}
                                          {{ forloop.index -}}
                                        {%- else -%}
                                          <span class="dot"></span>
                                        {%- endif -%}
                                      </button>
                                    {%- endfor -%}
                                  </div>
                                {%- endif -%}
                              </div>
                              <button
                                type="button"
                                class="slider-button slider-button--next"
                                name="next"
                                aria-label="{{ 'general.slider.next_slide' | t }}"
                              >
                                {% render 'icon-arro' %}
                              </button>
                            </div>
                          {%- endif -%}
                        </slideshow-component>
                        {%- if block.settings.make_collapsible_row -%}
                          </details>
                        {%- endif -%}
                      </div>
                    </aside>
                  {%- endif -%}
                  {{ 'component-card.css' | asset_url | stylesheet_tag }}
                  {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                  {%- if block.settings.enable_quick_add -%}
                    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
                  {%- endif -%}
                </product-recommendations>
              {%- when 'icon-with-text' -%}
                {% render 'icon-with-text', block: block %}
            {%- endcase -%}
          {%- endfor -%}
          <a href="{{ product.url }}" class="link product__view-details animate-arrow">
            {{ 'products.product.view_full_details' | t }}
            {% render 'icon-arrow' %}
          </a>
        </product-info>
      </div>
      {%- if section.settings.media_position == 'right' -%}
        {% comment %} Duplicate gallery to display after product content on tablet/desktop breakpoint {% endcomment %}
        <div class="grid__item product__media-wrapper small-hide lumin-quick-add-hide">
           {% if section.settings.gallery_layout == 'vertical_right' or section.settings.gallery_layout == 'vertical_left' %}
        {% render 'product-media-gallery-vertical', variant_images: variant_images, show_feature_media: show_feature_media, is_duplicate: true %}
        {% else %}
        {% render 'product-media-gallery', variant_images: variant_images, show_feature_media: show_feature_media, is_duplicate: true %}
        {% endif %}
        </div>
      {%- endif -%}
    </div>

    {% render 'product-media-modal', variant_images: variant_images %}

    {% assign popups = section.blocks | where: 'type', 'popup' %}
    {%- for block in popups -%}
      <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
        <div
          role="dialog"
          aria-label="{{ block.settings.text }}"
          aria-modal="true"
          class="product-popup-modal__content"
          tabindex="-1"
        >
          <button
            id="ModalClose-{{ block.id }}"
            type="button"
            class="product-popup-modal__toggle"
            aria-label="{{ 'accessibility.close' | t }}"
          >
            {% render 'icon-close' %}
          </button>
          <div class="product-popup-modal__content-info">
            <h1 class="h2">{{ block.settings.page.title }}</h1>
            {{ block.settings.page.content }}
          </div>
        </div>
      </modal-dialog>
    {%- endfor -%}

    {% assign size_chart = section.blocks | where: 'type', 'size-chart' %}
    {%- for block in size_chart -%}
      <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
        <div
          role="dialog"
          aria-label="{{ block.settings.text }}"
          aria-modal="true"
          class="product-popup-modal__content"
          tabindex="-1"
        >
          <button
            id="ModalClose-{{ block.id }}"
            type="button"
            class="product-popup-modal__toggle"
            aria-label="{{ 'accessibility.close' | t }}"
          >
            {% render 'icon-close' %}
          </button>
          <div class="product-popup-modal__content-info">
            <h1 class="h2">{{ block.settings.page.title }}</h1>
            {{ block.settings.page.content }}
          </div>
        </div>
      </modal-dialog>
    {%- endfor -%}

    {%- if product.media.size > 0 -%}
      <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if first_3d_model -%}
      <script type="application/json" id="ProductJSON-{{ product.id }}">
        {{ product.media | where: 'media_type', 'model' | json }}
      </script>
      <script src="{{ 'product-model.js' | asset_url }}" defer></script>
    {%- endif -%}

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        function isIE() {
          const ua = window.navigator.userAgent;
          const msie = ua.indexOf('MSIE ');
          const trident = ua.indexOf('Trident/');

          return msie > 0 || trident > 0;
        }

        if (!isIE()) return;
        const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
        const noScriptInputWrapper = document.createElement('div');
        const variantSwitcher =
          document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
          document.querySelector('variant-selects[data-section="{{ section.id }}"]');
        noScriptInputWrapper.innerHTML = document.querySelector(
          '.product-form__noscript-wrapper-{{ section.id }}'
        ).textContent;
        variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

        document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
          hiddenInput.value = event.currentTarget.value;
        });
      });
    </script>

    {%- liquid
      if product.selected_or_first_available_variant.featured_media
        assign seo_media = product.selected_or_first_available_variant.featured_media
      else
        assign seo_media = product.featured_media
      endif
    -%}
{%- if settings.show_sticky_cart_button -%}
{% render 'new-atc', block: variant_picker_block, product: product, product_form_id: product_form_id, section_id: section.id %}
{%- endif -%}

                            
    <script type="application/ld+json">
      {
        "@context": "http://schema.org/",
        "@type": "Product",
        "name": {{ product.title | json }},
        "url": {{ request.origin | append: product.url | json }},
        {% if seo_media -%}
          "image": [
            {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
          ],
        {%- endif %}
        "description": {{ product.description | strip_html | json }},
        {% if product.selected_or_first_available_variant.sku != blank -%}
          "sku": {{ product.selected_or_first_available_variant.sku | json }},
        {%- endif %}
        "brand": {
          "@type": "Brand",
          "name": {{ product.vendor | json }}
        },
        "offers": [
          {%- for variant in product.variants -%}
            {
              "@type" : "Offer",
              {%- if variant.sku != blank -%}
                "sku": {{ variant.sku | json }},
              {%- endif -%}
              {%- if variant.barcode.size == 12 -%}
                "gtin12": {{ variant.barcode }},
              {%- endif -%}
              {%- if variant.barcode.size == 13 -%}
                "gtin13": {{ variant.barcode }},
              {%- endif -%}
              {%- if variant.barcode.size == 14 -%}
                "gtin14": {{ variant.barcode }},
              {%- endif -%}
              "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
              "price" : {{ variant.price | divided_by: 100.00 | json }},
              "priceCurrency" : {{ cart.currency.iso_code | json }},
              "url" : {{ request.origin | append: variant.url | json }}
            }{% unless forloop.last %},{% endunless %}
          {%- endfor -%}
        ]
      }
    </script>
  </div>
</section>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "breadcrumbs",
      "name": "Breadcrumbs",
       "settings": [
               {
      "type": "text",
      "id": "title_home",
      "default": "Home",
      "label": "First Name"
    },
       {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 0
    },
          {
      "type": "range",
      "id": "padding_top_mb",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top Padding Mobile",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 0
    },
      {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    }
       ]
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1,
       "settings": [
          {
          "type": "range",
          "id": "title_size",
          "label": "Title Size",
          "min": 8,
          "max": 100,
          "step": 1,
          "info": "Title Size in pixels",
          "default": 28
        },
       {
          "type": "range",
          "id": "title_height",
          "label": "Line Spacing",
          "min": 50,
          "max": 200,
          "step": 2,
          "default": 120
        },
   {
              "type": "select",
              "id": "text_transform",
              "options": [
                {
                  "value": "none",
                  "label": "None"
                },
                {
                  "value": "uppercase",
                  "label": "Uppercase"
                },
                {
                  "value": "lowercase",
                  "label": "Lowercase"
                }
              ],
              "default": "none",
              "label": "Text transform"
          }
       ]
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "price_style",
          "options": [
            {
              "value": "price",
              "label": "Style 1"
            },
            {
              "value": "price_2",
              "label": "Style 2"
            }
          ],
          "default": "price",
          "label": "Price Display Style"
        },
        {
          "type": "header",
          "content": "Style 1 Settings"
        },
      {
          "type": "range",
          "id": "price_size",
          "label": "Price Size",
          "min": 8,
          "max": 30,
          "step": 1,
          "info": "Price Size on Style 1",
          "default": 16
        },
        {
          "type": "range",
          "id": "badge_text_1",
          "label": "Badge Text Size",
          "min": 6,
          "max": 20,
          "step": 1,
          "info": "Badge Text Size",
          "default": 13
        },
        {
          "type": "checkbox",
          "id": "price_first",
          "label": "Show Regular Price First",
          "default": false,
          "info": "Work on Style 1"
        },
        {
          "type": "color",
          "id": "badge_bg_1",
          "label": "Badge Background",
          "default": "#d10000"
        },
        {
          "type": "color",
          "id": "badge_price_1",
          "label": "Badge Text",
          "default": "#ffffff"
        },
        {
          "type": "header",
          "content": "Style 2 Settings"
        },
        {
          "type": "range",
          "id": "price_size_2",
          "label": "Price Size Style 2",
          "min": 0.3,
          "max": 2,
          "step": 0.1,
          "info": "Price Size on Style 2",
          "default": 1
        },
        {
          "type": "color",
          "id": "badge_price",
          "label": "Sale badge Color",
          "default": "#8b8d8f",
          "info": "Work on Style 2"
        },
        {
          "type": "checkbox",
          "id": "price_bold_2",
          "label": "Bold small text",
          "default": false
        },
        {
          "type": "header",
          "content": "Common Settings"
        },
        {
          "type": "color",
          "id": "sale_price_color",
          "label": "Sale Price Color",
          "default": "#efefef"
        },
        {
          "type": "color",
          "id": "regular_price_color",
          "label": "Regular Price Color",
          "default": "#212121"
        },
        {
          "type": "checkbox",
          "id": "price_bold",
          "label": "Bold text",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "badge_hide",
          "label": "Hide Sale Badge",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "taxes_hide",
          "label": "Hide Tax Info",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "shipping_hide",
          "label": "Hide Shipping Info",
          "default": false
        },
        {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 4
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 4
    }
      ]
         },
     {
      "type": "line",
      "name": "Line",
      "settings": [
        {
          "type": "color",
          "id": "line_color",
          "label": "Line Color",
          "default": "#eee"
        },
       {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 12
    },
      ]
    },
     {
      "type": "fomo",
      "name": "Fomo Block",
      "limit": 1,
       "settings": [

         {
          "type": "header",
          "content": "Text"
        },
         {
          "type": "inline_richtext",
          "id": "fomo_text_before",
          "label": "Fomo Text - ✨ Fancy enabled",
          "default": "Hurry! (x) are viewing this!",
          "info": "Use the special character '(x)' as a placeholder for the 'Radom Number'"
        },
         {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
           {
      "type": "range",
      "id": "text_size",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text Size",
      "default": 14
    },

         {
        "type": "header",
        "content": "Look"
      },
          {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
       {
          "type": "checkbox",
          "id": "fomo_border_activate",
          "label": "Show Border",
          "default": false
        },
         {
      "type": "range",
      "id": "fomo_border",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Corner Radius",
      "default": 0,
      "info": "Work on grid layout only"
    },
         {
          "type": "color",
          "id": "fomo_border_color",
          "label": "Border Color",
          "default": "#efefef"
        },
         {
          "type": "color",
          "id": "pill_color",
          "label": "Pill Color",
          "default": "#fd0234"
        },
         {
          "type": "range",
          "id": "fomo_min",
          "label": "Number Minimum",
          "min": 1,
          "max": 100,
          "step": 1,
          "info": "Minimum number",
          "default": 5
        },
            {
          "type": "range",
          "id": "fomo_max",
          "label": "Number Maximum",
          "min": 1,
          "max": 100,
          "step": 1,
          "info": "Maximum number",
          "default": 9
        },
        {
          "type": "range",
          "id": "fomo_speed",
          "label": "Number Speed",
          "min": 1,
          "max": 20,
          "step": 1,
          "unit": "Sec",
          "info": "Save the theme after each change for settings to apply",
          "default": 3
        },

       {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top-Bottom",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Left-Right",
      "default": 12
    },
      {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 36
    }
       ]
    },
       {
      "type": "testimonial-images",
      "name": "Testimonial Images",
      "settings": [
              {
          "type": "range",
          "id": "image_size",
          "label": "Image Bar Size",
          "min":       0.5,
          "max":        2,
          "step":       0.1,
          "default": 1
          },
        {
          "type": "range",
          "id": "image_space",
          "label": "Image Space",
          "min":       -30,
          "max":        10,
          "step":       1,
          "default": -18
          },
             {
              "type": "image_picker",
              "id": "image",
              "label": "Image"
            },
        {
          "type": "checkbox",
          "id": "hide_img_2",
          "label": "Hide Image 2",
          "default": false
        },
        {
              "type": "image_picker",
              "id": "image_2",
              "label": "Image"
            },
        {
          "type": "checkbox",
          "id": "hide_img_3",
          "label": "Hide Image 3",
          "default": false
        },
         {
              "type": "image_picker",
              "id": "image_3",
              "label": "Image"
            },
        {
          "type": "checkbox",
          "id": "hide_img_4",
          "label": "Hide Image 4",
          "default": false
        },
         {
              "type": "image_picker",
              "id": "image_4",
              "label": "Image"
            },
        {
          "type": "checkbox",
          "id": "hide_img_5",
          "label": "Hide Image 5",
          "default": false
        },
        {
              "type": "image_picker",
              "id": "image_5",
              "label": "Image"
            },
        {
          "type": "richtext",
          "id": "text_block",
          "default": "<p>★★★★★ Excellent 4.8</p>",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        },
           {
          "type": "range",
          "id": "text_size",
          "label": "Text Size",
          "min":       8,
          "max":        30,
          "step":       1,
          "default": 13
          },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        },
      ]
    },
     {
      "type": "review",
      "name": "Lumin Review",
      "limit": 1,
       "settings": [
         {
          "type": "inline_richtext",
          "id": "lrw_text",
          "label": "Review Text",
          "default": "4.8 From 136 Reviews"
        },
         {
          "type": "range",
          "id": "text_size",
          "label": "Text Size",
          "min":       6,
          "max":        30,
          "step":       1,
          "default": 14
          },
         {
        "type": "header",
        "content": "Stars"
      },
   {
      "type": "select",
      "id": "star_style",
      "label": "Star Style",
      "options": [
        {
          "value": "star",
          "label": "Stars"
        },
        {
          "value": "star_bg",
          "label": "Colors"
        },
        {
          "value": "star_bg_2",
          "label": "Crisp"
        }
      ],
      "default": "star"
    },
         {
    "type":      "range",
    "id":        "star_size",
    "min":       0.5,
    "max":        2,
    "step":       0.1,
    "label":     "Star Size",
    "default":   1
},
            {
    "type":      "range",
    "id":        "star_rating",
    "min":       1,
    "max":        5,
    "step":       0.5,
    "label":     "Star Rating",
    "default":   4.5
},
         {
        "type": "color",
        "id": "lrw_star_color",
        "label":  "Star Color",
        "default": "#000000"
      },
          {
        "type": "color",
        "id": "lrw_star_color_disable",
        "label":  "Inactive Star Color",
        "default": "#eee"
      },
         {
        "type": "color",
        "id": "lrw_color",
        "label":  "Text Color",
        "default": "#000000"
      },
          {
      "type": "range",
      "id": "margin_top",
      "min": -16,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Margin Top",
      "default": 10
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": -16,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 10
    },
     {
    "type": "header",
    "content": "Note",
    "info": "Make sure to add \"Lumin Review\" section in order to work this block correctly"
     }
       ]
    },
    {
      "type": "promo",
      "name": "Promo",
      "settings": [
        {
          "type": "select",
          "id": "icon",
           "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },

        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon",
          "info": "240 x 240px .png recommended"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 16,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Icon width",
          "default": 24
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p>Short content</p>"
        },
        {
          "type": "range",
          "id": "font_size",
          "min": 40,
          "max": 200,
          "step": 2,
          "unit": "%",
          "label": "Font Size",
          "default": 100
        }
      ]
    },
    {
      "type": "feature",
      "name": "List Feature",
      "settings": [
             {
              "type": "image_picker",
              "id": "icon",
              "label": "Image"
            },
               {
          "type": "range",
          "id": "icon_size",
          "label": "Feature Image Size",
          "min":       20,
          "max":        100,
          "step":       2,
          "unit":       "px",

          "default": 50
          },
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "List Feature",
          "label": "t:sections.image-with-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "range",
          "id": "heading_size",
          "min": 8,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Heading Size",
          "default": 20
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>focus on your chosen product</p>",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        },
        {
          "type": "range",
          "id": "text_size",
          "min": 6,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Text Size",
          "default": 16
        },
        {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 8
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 8
    }
      ]
    },
        {
      "type": "image",
      "name": "Image",
      "settings": [
             {
              "type": "image_picker",
              "id": "image",
              "label": "Image"
            },
               {
          "type": "range",
          "id": "image_size",
          "label": "Feature Image Size",
          "min":       20,
          "max":        100,
          "step":       1,
          "unit":       "%",

          "default": 100
          },
           {
          "type": "range",
          "id": "image_border",
          "label": "Image corner radius",
          "min":       0,
          "max":        40,
          "step":       1,
          "unit":       "px",

          "default": 0
          },
         {
          "type": "select",
          "id": "img_position",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "left",
          "label": "Left"
        },
        {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
      ]
    },
    {
      "type": "custom-field",
      "name": "Line item property",
       "settings": [
         {
          "type": "select",
          "id": "field_style",
          "options": [
            {
              "value": "text",
              "label": "Short Text"
            },
            {
              "value": "file",
              "label": "File Upload"
            },
            {
              "value": "checkbox",
              "label": "Checkbox"
            },
            {
              "value": "dropdown",
              "label": "Dropdown"
            },
            {
              "value": "date",
              "label": "Date"
            }
          ],
          "default": "text",
          "label": "Short Text"
    },
         {
          "type": "checkbox",
          "id": "checkbox_required",
          "default": false,
          "label": "Required",
          "info": "Check this if you want customer to fill this field before procceed"
        },
         {
           "type": "header",
           "content": "Settings",
           "info": "Work on all options "
         },
         {
          "type": "select",
          "id": "label_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        },
         {
          "type": "select",
          "id": "font_style",
          "options": [
            {
              "value": "normal",
              "label": "Normal"
            },
            {
              "value": "bold",
              "label": "Bold"
            }
          ],
          "default": "normal",
          "label": "Label Font"
        },
         {
          "type": "range",
          "id": "font_size",
          "min": 6,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Text Size",
          "default": 14
        },
         {
          "type": "text",
          "id": "text_lable",
          "default": "Your Label",
          "label": "Label",
          "info": "Your text"
        },
         {
          "type": "text",
          "id": "checkbox_pro",
          "default": "Wrap as a gift?",
          "label": "Short Text",
          "info": "You and buyer see it on cart page and at checkout. Use only 1 to 2 word max"
        },
         {
           "type": "header",
           "content": "Dropdown Options",
           "info": "Work when you select \"Dropdown\""
         },
         {
          "type": "text",
          "id": "custom_option_1",
          "default": "Option 1",
          "label": "Option 1"
        },
         {
          "type": "text",
          "id": "custom_option_2",
          "label": "Option 2"
        },
         {
          "type": "text",
          "id": "custom_option_3",
          "label": "Option 3"
        },
         {
          "type": "text",
          "id": "custom_option_4",
          "label": "Option 4"
        },
         {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 0
    }
       ]
    },
      {
      "type": "shipping",
      "limit": 1,
      "name": "Shipping Info",
      "settings": [
         {
        "type":      "range",
        "id":        "ship_days",
        "min":       0,
        "max":        40,
        "step":       1,
        "unit":       "D",
        "label":     "Delivery Days",
        "default":   2,
        "info": "Weekend will be skip"
     },
         {
        "type":      "range",
        "id":        "cut_off_time",
        "min":       1,
        "max":        24,
        "step":       0.5,
        "unit":       "hrs",
        "label":     "Shipping Cut-Off Time",
        "default":   16
     },
             {
              "type": "image_picker",
              "id": "icon",
              "label": "Image"
            },
               {
          "type": "range",
          "id": "icon_size",
          "label": "Feature Image Size",
          "min":       8,
          "max":        100,
          "step":       1,
          "unit":       "px",

          "default": 20
          },
        {
          "type": "select",
          "id": "image_ani",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "swing",
              "label": "Swing"
            },
            {
              "value": "flash",
              "label": "Flash"
            },
            {
              "value": "fadeIn",
              "label": "Fade in"
            },
            {
              "value": "heartBeat",
              "label": "Heart Beat"
            },
            {
              "value": "shake",
              "label": "Shake"
            },
            {
              "value": "tada",
              "label": "Tada"
            },
            {
              "value": "bounce",
              "label": "Bounce"
            }
          ],
          "default": "none",
          "label": "Image Animation"
    },
               {
          "type": "range",
          "id": "text_size",
          "label": "text Size",
          "min":       8,
          "max":        20,
          "step":       1,
          "unit":       "px",
          "default": 10
          },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "uppercase",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
    },
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Order in (timer) and Get delivery By (date)",
          "label": "Text - ✨ Fancy enabled",
          "info": "Use the special character '(timer)' as a placeholder for the 'Countdown Timer' and (date) for delivery date"
        },
        {
          "type": "text",
          "id": "date_locale",
          "default": "en-US",
          "label": "Date Language",
          "info": "ISO Language Code for Date. For exmaple 'en-US' (Default), fr-FR (French), de-DE (German) ecc.  [See Table](http:\/\/www.lingoes.net\/en\/translator\/langcode.htm)"
           },
        {
        "type": "color",
        "id": "ship_bg",
        "label": "Background Color",
        "default": "transparent"
      },
  {
        "type": "checkbox",
        "id": "show_border",
        "label": "Show Border",
        "default": false
      },
{
        "type": "color",
        "id": "ship_border",
        "label": "Border",
        "default": "#f2f2f2"
      },
   {
    "type":      "range",
    "id":        "border_radius",
    "min":       0,
    "max":        100,
    "step":       1,
    "unit":       "px",
    "label":     "Corner Radius",
    "default":   0
},
          {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top-Bottom",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Left-Right",
      "default": 12
    },
      {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Top",
      "default": 16
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 16
    }
      ]
    },
    {
      "type": "auto_tabs",
      "name": "Auto Description Tabs",
      "limit": 1,
      "settings": [
         {
        "type": "paragraph",
        "content": "Use this [tutorial](https://help.lumintheme.com/lumin-theme-documentation/auto-generate-tabs-with-the-products-content) to auto generate tabs with the product's description"
      },
        {
        "type": "color_scheme",
        "id": "tabs_color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "background-1"
      },
        {
      "type": "checkbox",
      "id": "compact",
      "label": "Compact width",
      "default": true
    },
         {
      "type": "range",
      "id": "auto_tab_heading",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Heading size",
      "default": 13
    },
       {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 16
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 16
    }
      ]
  },
    {
      "type": "tabs",
      "name": "Tabs",
      "limit": 5,
      "settings": [
        {
        "type": "color_scheme",
        "id": "tabs_color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "background-1"
      },
        {
      "type": "checkbox",
      "id": "compact",
      "label": "Compact width",
      "default": true
    },
      {
      "type": "range",
      "id": "tab_font",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Tabs heading font desktop",
      "default": 16
    },
     {
        "type": "text_alignment",
        "id": "tab_font_align",
        "label": "Heading alignment",
        "default": "center"
     },
    {
        "type": "text_alignment",
        "id": "tab_content_align",
        "label": "Tab content alignment",
        "default": "left"
     },
    {
      "type": "range",
      "id": "tab_font_mb",
      "min": 8,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Tabs heading font mobile",
      "default": 14
    },
    {
        "type": "text_alignment",
        "id": "tab_font_mb_align",
        "label": "Heading alignment mobile",
        "default": "center"
     },
     {
        "type": "text_alignment",
        "id": "tab_content_align_mb",
        "label": "Tab content alignment mobile",
        "default": "left"
     },
     {
      "type": "checkbox",
      "id": "show_border",
      "label": "Show bottom border",
      "default": true
    },
         {
           "type": "header",
           "content": "Tab 1"
         },
        {
          "type": "checkbox",
          "id": "large-hide",
          "label": "Hide on desktop",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "small-hide",
          "label": "Hide on mobile",
          "default": false
        },
           {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Heading",
          "info": "Include a heading that explains the tab."
        },
        {
          "type": "checkbox",
          "id": "description",
          "label": "Show Product Description",
          "default": false
        },
         {
          "type": "richtext",
          "id": "tab_content",
          "default": "<p>Some text here</p>",
          "label": "Content"
        },
       {
           "type": "header",
           "content": "Tab 2"
         },
         {
          "type": "checkbox",
          "id": "tab_2",
          "label": "Show tab 2",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "large-hide-2",
          "label": "Hide on desktop",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "small-hide-2",
          "label": "Hide on mobile",
          "default": false
        },
           {
          "type": "text",
          "id": "heading_2",
          "label": "Heading",
          "default": "Heading",
          "info": "Include a heading that explains the tab."
        },
        {
          "type": "checkbox",
          "id": "description_2",
          "label": "Show Product Description",
          "default": false
        },
         {
          "type": "richtext",
          "id": "tab_content_2",
          "default": "<p>Some text here</p>",
          "label": "Content"
        },
  {
          "type": "checkbox",
          "id": "tab_3",
          "label": "Show tab 3",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "large-hide-3",
          "label": "Hide on desktop",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "small-hide-3",
          "label": "Hide on mobile",
          "default": false
        },
           {
          "type": "text",
          "id": "heading_3",
          "label": "Heading",
          "default": "Heading",
          "info": "Include a heading that explains the tab."
        },
         {
          "type": "richtext",
          "id": "tab_content_3",
          "default": "<p>Some text here</p>",
          "label": "Content"
        }
      ]
     },
     {
      "type": "text_benefits",
      "name": "Text/Emoji benefits",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "benefits",
          "label": "Benefits",
          "default": "<p>✨ Benefit</p><p>🌸 Benefit</p><p>❄️ Benefit</p>"
        }
      ]
    },
     {
      "type": "checkbox",
      "name": "Product Option: checkbox",
       "settings": [
        {
          "type": "text",
          "id": "checkbox_text",
          "default": "Wrap as a gift?",
          "label": "Text",
          "info": "Your text"
        },
         {
          "type": "text",
          "id": "checkbox_pro",
          "default": "Wrap as a gift?",
          "label": "Short Text",
          "info": "You and buyer see it on cart page and at checkout. Use only 1 to 2 word max"
        },
         {
          "type": "color",
          "id": "checkbox_color",
          "label": "Toggle on Color",
          "default": "#647670"
        }
      ]
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    
    {
      "type": "inventory",
      "name": "Inventory",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "bar_font_size",
          "min": 6,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Text Size",
          "default": 14
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "info": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.info",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_bar",
          "label": "Show Inventory Bar",
          "default": true
        },
         {
          "type": "checkbox",
          "id": "show_inventory_pill",
          "label": "Show Inventory Pill",
          "default": true
        },
        {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "text",
      "id": "text_soldout",
      "label": "Sold-out",
      "default": "Unfortunately this item is sold-out!"
    },
    {
      "type": "text",
      "id": "text_untracked",
      "label": "Untracked",
      "default": "Currently this item has stock!"
    },
    {
      "type": "text",
      "id": "text_low_one",
      "label": "Low stock - one item",
      "default": "Hurry up! Only <b>1 item<\/b> is in stock"
    },
    {
      "type": "text",
      "id": "text_low_many",
      "label": "Low stock - more than one item",
      "default": "Hurry up! Only <b>[qty] items<\/b> are in stock."
    },
    {
      "type": "text",
      "id": "text_normal",
      "label": "Normal stock",
      "default": "Currently <b>[qty] items<\/b> are in stock!"
    },
        {
      "type": "header",
      "content": "Inventory Bar Settings"
    },
        {
        "type": "range",
        "id": "inv_bar_height",
        "min": 1,
        "max": 20,
        "step": 1,
        "unit": "px",
        "label": "t:settings_schema.lumin-freeshipping-bar.settings.colors.option__1",
        "default": 3
      },
      {
        "type": "range",
        "id": "inv_bar_radius",
        "min": 0,
        "max": 24,
        "step": 1,
        "unit": "px",
        "label": "t:settings_schema.lumin-freeshipping-bar.settings.colors.option__2",
        "default": 0
      },
        {
      "type": "header",
      "content": "Normal StockColor"
      },
        {
          "type": "color",
          "id": "normal_pill_color",
          "label": "Normal Stock Pill Color",
          "default": "#3ed660"
        },
        {
          "type": "color",
          "id": "normal_color",
          "label": "Normal Stock Bar Color",
          "default": "#0DA73F"
        },
        {
          "type": "color",
          "id": "normal_color_2",
          "label": "Normal Stock Bar Color 2",
          "default": "#9BEFB6"
        },
        {
      "type": "header",
      "content": "Low StockColor"
      },
        {
          "type": "color",
          "id": "low_pill_color",
          "label": "Low Stock Pill Color",
          "default": "#ff0505"
        },
        {
          "type": "color",
          "id": "low_color",
          "label": "Low Stock Bar Color",
          "default": "#ff3484"
        },
        {
          "type": "color",
          "id": "low_color_2",
          "label": "Low Stock Bar Color 2",
          "default": "#f1e04d"
        },
        {
      "type": "header",
      "content": "Sold Out Color"
      },
        {
          "type": "color",
          "id": "sold_pill_color",
          "label": "Sold Pill Color",
          "default": "#c8c8c8"
        },
        {
          "type": "color",
          "id": "background_bar",
          "label": "Bar Background Color",
          "default": "#e9ecef"
        }
      ]
    },
     {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1,
      "settings": [
        {
            "type": "header",
            "content": "Quantity Discounts"
        },
        {
            "type": "paragraph",
            "content": "IMPORTANT: Please note that in order for the discounts to work, you'll need to set automatic discounts in your Shopify admin. Learn more about automatic discounts [here](https://help.shopify.com/en/manual/discounts/discount-types)."
        },
        {
            "type": "checkbox",
            "id": "enable_quantity_discounts",
            "label": "Enable Quantity Discounts"
        },
        {
          "type": "paragraph",
          "content": "Coming soon... Guide on how to set up"
        },
        {
            "type": "inline_richtext",
            "id": "headline",
            "label": "Heading",
            "default": "BUNDLE & SAVE"
        },
         {
            "type": "range",
            "id": "txt_size_head_qb",
            "min": 8,
            "max": 40,
            "step": 2,
            "unit": "px",
            "label": "Heading Size",
            "default": 18
        },
        {
            "type": "inline_richtext",
            "id": "sub_headline",
            "label": "Sub Heading",
            "default": "This offer is for limited time only"
        },
         {
            "type": "range",
            "id": "txt_size_subhead_qb",
            "min": 8,
            "max": 40,
            "step": 2,
            "unit": "px",
            "label": "Sub Heading Size",
            "default": 12
        },
        {
          "type": "color",
          "id": "background_top_qb",
          "label": "Top Bar Background Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "background_top_text_qb",
          "label": "Top Bar Text Color",
          "default": "#212121"
        },
        {
          "type": "color",
          "id": "background_qb",
          "label": "Background Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "border_qb",
          "label": "Border Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "check_bg_qb",
          "label": "Checked Background Color",
          "default": "#e9ecef"
        },
        {
          "type": "color",
          "id": "check_border_qb",
          "label": "Checked Border Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "check_dot",
          "label": "Check Dot Color",
          "default": "#000"
        },
        {
          "type": "color",
          "id": "hover_bg_qb",
          "label": "Hover Background Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "hover_border_qb",
          "label": "Hover Border Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "badge_qb",
          "label": "Badge Backgrund Color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "badge_qb_text",
          "label": "Badge Text Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "compare_price",
          "label": "Compare Price Color",
          "default": "#000"
        },
         {
            "type": "range",
            "id": "qb_border_wd",
            "min": 0,
            "max": 10,
            "step": 1,
            "unit": "px",
            "label": "Corner width",
            "default": 2
        },
        {
            "type": "range",
            "id": "qb_border",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Corner Radius",
            "default": 4
        },
         {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    },
        {
            "type": "select",
            "id": "preselected",
            "options": [
                {
                    "value": "none",
                    "label": "None"
                },
                {
                    "value": "option_1",
                    "label": "Option #1"
                },
                {
                    "value": "option_2",
                    "label": "Option #2"
                },
                {
                    "value": "option_3",
                    "label": "Option #3"
                },
                {
                    "value": "option_4",
                    "label": "Option #4"
                }
            ],
            "default": "option_2",
            "label": "Preselected option"
        },
        {
            "type": "select",
            "id": "display_badge",
            "options": [
                {
                    "value": "none",
                    "label": "None"
                },
                {
                    "value": "option_1",
                    "label": "Option #1"
                },
                {
                    "value": "option_2",
                    "label": "Option #2"
                },
                {
                    "value": "option_3",
                    "label": "Option #3"
                },
                {
                    "value": "option_4",
                    "label": "Option #4"
                }
            ],
            "default": "option_2",
            "label": "Display badge on:"
        },
        {
            "type": "text",
            "id": "badge_text",
            "label": "Badge text",
            "default": "Most Popular"
        },
        
        {
            "type": "header",
            "content": "quantity option #1"
        },
        {
            "type": "range",
            "id": "option_1_quantity",
            "min": 0,
            "max": 20,
            "step": 1,
            "unit": "qty",
            "label": "Option #1 Quantity",
            "default": 1,
            "info": "Set to 0 to disable this option"
        },
        {
            "type": "text",
            "id": "option_1_label",
            "label": "Option #1 Label",
            "info": "If empty, default \"Buy X\" will be displayed"
        },
        {
            "type": "text",
            "id": "option_1_benefit",
            "label": "Option #1 Benefit",
            "info": "Display an additional benefit of the bundle (for example Free Shipping)"
        },
        {
            "type": "text",
            "id": "option_1_caption",
            "label": "Option #1 Caption",
            "default": "Only [item_price] per Item",
            "info": "Use placeholder [item_price] for single item price and [discount] for amount or percentage. example \"Only [item_price] per Item\" or \"You Save [discount]\"."
        },
        {
          "type": "select",
          "id": "option_1_discount_type",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "percentage",
              "label": "Percentage"
            },
            {
              "value": "fixed_amount",
              "label": "Fixed amount"
            }
          ],
          "default": "none",
          "label": "Option #1 Discount Type"
        },
        {
          "type": "range",
          "id": "option_1_percentage_off",
          "min": 0,
          "max": 100,
          "default": 0,
          "step": 5,
          "unit": "%",
          "label": "Option #1 Percentage off",
          "info": "A percentage that will be discounted from the quantity's total price"
        },
        {
          "type": "text",
          "id": "option_1_fixed_amount_off",
          "label": "Option #1 Fixed amount off",
          "default": "0",
          "info": "A fixed amount of money (WITHOUT the currency symbol/code) that will be subtracted from the quantity's total price"
        },
        {
          "type": "header",
          "content": "quantity option #2"
        },
        {
            "type": "range",
            "id": "option_2_quantity",
            "min": 0,
            "max": 20,
            "step": 1,
            "unit": "qty",
            "label": "Option #2 Quantity",
            "default": 2,
            "info": "Set to 0 to disable this option"
        },
        {
            "type": "text",
            "id": "option_2_label",
            "label": "Option #2 Label",
            "info": "If empty, default \"Buy X\" will be displayed"
        },
        {
            "type": "text",
            "id": "option_2_benefit",
            "label": "Option #2 Benefit",
            "info": "Display an additional benefit of the bundle (for example Free Shipping)"
        },
        {
            "type": "text",
            "id": "option_2_caption",
            "label": "Option #2 Caption",
            "default": "Only [item_price] per Item",
            "info": "Use placeholder [item_price] for single item price and [discount] for amount or percentage. example \"Only [item_price] per Item\" or \"You Save [discount]\"."
        },
        {
          "type": "select",
          "id": "option_2_discount_type",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "percentage",
              "label": "Percentage"
            },
            {
              "value": "fixed_amount",
              "label": "Fixed amount"
            }
          ],
          "default": "percentage",
          "label": "Option #2 Discount Type"
        },
        {
          "type": "range",
          "id": "option_2_percentage_off",
          "min": 0,
          "max": 100,
          "default": 20,
          "step": 5,
          "unit": "%",
          "label": "Option #2 Percentage off",
          "info": "A percentage that will be discounted from the quantity's total price"
        },
        {
          "type": "text",
          "id": "option_2_fixed_amount_off",
          "label": "Option #2 Fixed amount off",
          "default": "0",
          "info": "A fixed amount of money (WITHOUT the currency symbol/code) that will be subtracted from the quantity's total price"
        },
        {
          "type": "header",
          "content": "quantity option #3"
        },
        {
            "type": "range",
            "id": "option_3_quantity",
            "min": 0,
            "max": 20,
            "step": 1,
            "unit": "qty",
            "label": "Option #3 Quantity",
            "default": 3,
            "info": "Set to 0 to disable this option"
        },
        {
            "type": "text",
            "id": "option_3_label",
            "label": "Option #3 Label",
            "info": "If empty, default \"Buy X\" will be displayed"
        },
        {
            "type": "text",
            "id": "option_3_benefit",
            "label": "Option #3 Benefit",
            "info": "Display an additional benefit of the bundle (for example Free Shipping)"
        },
        {
            "type": "text",
            "id": "option_3_caption",
            "label": "Option #3 Caption",
            "default": "Only [item_price] per Item",
            "info": "Use placeholder [item_price] for single item price and [discount] for amount or percentage. example \"Only [item_price] per Item\" or \"You Save [discount]\"."
        },
        {
          "type": "select",
          "id": "option_3_discount_type",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "percentage",
              "label": "Percentage"
            },
            {
              "value": "fixed_amount",
              "label": "Fixed amount"
            }
          ],
          "default": "percentage",
          "label": "Option #3 Discount Type"
        },
        {
          "type": "range",
          "id": "option_3_percentage_off",
          "min": 0,
          "max": 100,
          "default": 30,
          "step": 5,
          "unit": "%",
          "label": "Option #3 Percentage off",
          "info": "A percentage that will be discounted from the quantity's total price"
        },
        {
          "type": "text",
          "id": "option_3_fixed_amount_off",
          "label": "Option #3 Fixed amount off",
          "default": "0",
          "info": "A fixed amount of money (WITHOUT the currency symbol/code) that will be subtracted from the quantity's total price"
        },
        {
          "type": "header",
          "content": "quantity option #4"
        },
        {
            "type": "range",
            "id": "option_4_quantity",
            "min": 0,
            "max": 20,
            "step": 1,
            "unit": "qty",
            "label": "Option #4 Quantity",
            "default": 4,
            "info": "Set to 0 to disable this option"
        },
        {
            "type": "text",
            "id": "option_4_label",
            "label": "Option #4 Label",
            "info": "If empty, default \"Buy X\" will be displayed"
        },
        {
            "type": "text",
            "id": "option_4_benefit",
            "label": "Option #4 Benefit",
            "info": "Display an additional benefit of the bundle (for example Free Shipping)"
        },
        {
            "type": "text",
            "id": "option_4_caption",
            "label": "Option #4 Caption",
            "default": "Only [item_price] per Item",
            "info": "Use placeholder [item_price] for single item price and [discount] for amount or percentage. example \"Only [item_price] per Item\" or \"You Save [discount]\"."
        },
        {
          "type": "select",
          "id": "option_4_discount_type",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "percentage",
              "label": "Percentage"
            },
            {
              "value": "fixed_amount",
              "label": "Fixed amount"
            }
          ],
          "default": "percentage",
          "label": "Option #4 Discount Type"
        },
        {
          "type": "range",
          "id": "option_4_percentage_off",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "%",
          "label": "Option #4 Percentage off",
          "info": "A percentage that will be discounted from the quantity's total price"
        },
        {
          "type": "text",
          "id": "option_4_fixed_amount_off",
          "label": "Option #4 Fixed amount off",
          "default": "0",
          "info": "A fixed amount of money (WITHOUT the currency symbol/code) that will be subtracted from the quantity's total price"
        }
      ]
    },
    
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "info": "t:settings_schema.color_swatch.settings.header__3.info",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        },
         {
          "type": "select",
          "id": "label_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "font_size",
          "min": 6,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Text Size",
          "default": 14
        },
         {
          "type": "select",
          "id": "font_style",
          "options": [
            {
              "value": "normal",
              "label": "Normal"
            },
            {
              "value": "bold",
              "label": "Bold"
            }
          ],
          "default": "normal",
          "label": "Label Font"
        },
         {
          "type": "header",
          "content": "Swatches"
        },
         {
        "type": "select",
        "id": "swatchType",
        "label": "Swatch type",
        "options": [
          {
            "value": "color",
            "label": "Color"
          },
          {
            "value": "variantImage",
            "label": "Variant image"
          }
        ],
        "default": "color"
      },
        {
        "type": "text",
        "id": "optionName",
        "label": "Swatch option name",
        "default": "Color",
        "info": "Exact match is required, including capitalization."
      },
        {
        "type": "paragraph",
        "content": "If you have a multilingual store, please enter multiple options separated with commas. Example: Color,Colour,Fabre,Couleur"
      },
        {
        "type": "select",
        "id": "swatchStyle",
        "label": "Swatch style",
        "options": [
          {
            "value": "round",
            "label": "Round"
          },
          {
            "value": "square",
            "label": "Square"
          },
          {
            "value": "square-round-corners",
            "label": "Square round corners"
          },
          {
            "value": "portrait",
            "label": "Portrait"
          }
        ],
        "default": "round",
        "info": "Portrait mode is only available for the variant image type."
      },
        {
        "type": "range",
        "id": "swatchSize",
        "min": 20,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Swatch size",
        "default": 30
      },
      {
        "type": "range",
        "id": "swatchHeight",
        "min": 20,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Swatch Height",
        "default": 30,
        "info": "Work on portrait swatches."
      },
        {
          "type": "header",
          "content": "Size Chart"
        },
        {
          "type": "text",
          "id": "size_trigger",
          "label": "Size Chart option name",
          "info": "Write the product variant opton name for which you want to show size chart"
        },
         {
          "type": "text",
          "id": "chart_id",
          "default": "Size Chart",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "size_page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
  {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_full_button",
          "default": false,
          "label": "Show full size buttons",
          "info": "If uncheck, buttons will show in single line to save space where possible"
        },
        {
          "type": "color",
          "id": "lm_main_button",
          "label": "Button Background",
          "default": "#000"
        },
        {
          "type": "color_background",
          "id": "lm_main_button_gr",
          "label": "Button Gradiant"
        },
        {
          "type": "color",
          "id": "lm_main_text",
          "label": "Cart Button Text",
          "default": "#fff"
        },
        {
        "type": "select",
        "id": "lm_button_animation",
        "label": "Button animation",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "soft",
            "label": "Soft (On Hover)"
          },
          {
            "value": "ripple",
            "label": "Ripple"
          },
          {
            "value": "glowing",
            "label": "Glowing Borders"
          },
          {
            "value": "pulse",
            "label": "Pulse"
          },
          {
            "value": "wave",
            "label": "Wave"
          },
         {
            "value": "flicker",
            "label": "Flicker"
          },
          {
            "value": "slide",
            "label": "Slide"
          },
          {
            "value": "fade",
            "label": "Fade"
          },
          {
            "value": "bubble",
            "label": "Bubble"
          }
        ],
        "default": "soft",
        "info": "Button Animation"
      },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        },
        {
          "type": "checkbox",
          "id": "skip_cart",
          "label": "Skip cart",
          "default": false,
          "info": "After click the Add to Cart button Your customers will be sent directly to checkout."
        },
        {
          "type": "text",
          "id": "cart_text",
          "label": "Add to cart button text",
          "info": "Leave blank to show default"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
     {
      "type": "collapsible_description",
      "name": "Description Tab",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Description",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "checkbox",
          "id": "open_first_collapsible_row",
          "default": false,
          "label": "Open by default"
        },
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "size-chart",
      "name": "Size Chart",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "promo-slide",
      "name": "Promo slide",
      "settings": [
        {
          "label": "image",
          "type": "image_picker",
          "id": "slide_image"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Good Quality",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "text_1",
          "default": "<p>Share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store. ★★★★★</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        },
        {
        "type": "checkbox",
        "id": "show_slide_2",
        "label": "Show slide 2",
        "default": true
     },
        {
          "label": "image",
          "type": "image_picker",
          "id": "slide_image_2"
        },
        {
          "type": "text",
          "id": "block_heading_2",
          "default": "Nice Product",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "text_2",
          "default": "<p>Share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store. ★★★★★</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        },
         {
        "type": "checkbox",
        "id": "show_slide_3",
        "label": "Show slide 3",
        "default": false
     },
        {
          "label": "image",
          "type": "image_picker",
          "id": "slide_image_3"
        },
        {
          "type": "text",
          "id": "block_heading_3",
          "default": "Recomended",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "text_3",
          "default": "<p>Share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store. ★★★★★</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        },
        {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
       },
        {
      "type": "range",
      "id": "slide_padding",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Inner padding",
      "default": 20
    },
        {
          "type": "checkbox",
          "id": "show_border",
          "label": "Show Border",
          "default": false
        },
        {
          "type": "color",
          "id": "border_color",
          "label": "Border Color",
          "default": "#e4e4e4"
        },
        {
        "type": "range",
        "id": "slide_wrapper_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Container Radius",
        "info": "t:settings_schema.global.settings.corner_radius.label",
        "default": 0
      },
        {
        "type": "range",
        "id": "slide_img_size",
        "min": 20,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Image Size",
        "default": 60
      },
        {
        "type": "range",
        "id": "slide_img_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Image Radius",
        "info": "t:settings_schema.global.settings.corner_radius.label",
        "default": 100
      },
         {
      "type": "range",
      "id": "head_size",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.heading_size.label",
      "default": 20
    },
           {
      "type": "range",
      "id": "text_size",
      "min": 6,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Text Size",
      "default": 12
    },

        {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Pairs well with",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:sections.all.colors.label",
          "default": "background-1"
        },
         {
          "type": "range",
          "id": "icon_font_size",
          "min": 8,
          "max": 24,
          "step": 1,
          "default": 14,
          "label": "Font size"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.content.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.content.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    },
   {
      "type": "payment",
      "name": "Payment Icons",
      "limit": 1,
      "settings": [
         {
      "type": "select",
      "id": "payment_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center",
      "label": "Icon alignment"
    }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "paragraph",
      "content": "Edit  \"Sticky add to cart\" in [theme settings](/editor?context=theme&category=Sticky Add To Cart)."
    },
    {
      "type": "checkbox",
      "id": "show_feature_media",
      "default": false,
      "label": "Show Feature image First",
      "info": "This will show product feature image first instead of variant image on page load"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "Container Settings"
    },
    {
      "type": "checkbox",
      "id": "show_container",
      "default": false,
      "label": "Show product info container"
    },
    {
      "type": "range",
      "id": "container_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "t:settings_schema.global.settings.corner_radius.label",
      "default": 0
    },
    {
      "type": "range",
      "id": "container_padding",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Padding desktop",
      "default": 30
    },
    {
      "type": "color",
      "id": "container_color",
      "label": "t:sections.collapsible_content.settings.container_color_scheme.label",
      "default": "#f9f9f9"
    },
    {
      "type": "color",
      "id": "container_border_color",
      "label": "Border Color",
      "default": "#f9f9f9"
    },
    {
      "type": "header",
      "content": "Container Heading",
      "info": "show only when container is enable"
    },
     {
      "type": "inline_richtext",
      "id": "container_text",
      "label": "Container Heading"
    },
    {
      "type": "color",
      "id": "container_text_bg",
      "label": "Container Heading Background",
      "default": "#212121"
    },
    {
      "type": "color",
      "id": "container_text_txt",
      "label": "Container Heading",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Mobile Container Setting"
    },
    {
      "type": "checkbox",
      "id": "show_container_mb",
      "default": false,
      "label": "Show product info container on Mobile"
    },
    {
      "type": "range",
      "id": "container_padding_mb",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Padding mobile",
      "default": 20
    },
    {
      "type": "range",
      "id": "container_radius_mb",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "t:settings_schema.global.settings.corner_radius.label",
      "default": 0
    },
    {
      "type": "color",
      "id": "container_color_mb",
      "label": "t:sections.collapsible_content.settings.container_color_scheme.label",
      "default": "#f9f9f9"
    },
    {
      "type": "color",
      "id": "container_border_color_mb",
      "label": "Border Color",
      "default": "#f9f9f9"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label",
      "info": "t:sections.main-product.settings.media_size.info"
    },
    {
      "type": "checkbox",
      "id": "constrain_to_viewport",
      "default": true,
      "label": "t:sections.main-product.settings.constrain_to_viewport.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "vertical_right",
          "label": "Thumbnail Right"
        },
        {
          "value": "vertical_left",
          "label": "Thumbnail Left"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "range",
      "id": "thumbnail_size",
      "min": 30,
      "max": 120,
      "step": 2,
      "unit": "px",
      "label": "Thumbnail Size",
      "default": 70,
      "info": "Work only when thumbnail show on left or right"
    },
    {
      "type": "range",
      "id": "thumbnail_radius",
      "min": 0,
      "max": 120,
      "step": 2,
      "unit": "px",
      "label": "Thumbnail Corner Radius",
      "default": 4,
      "info": "Work only when thumbnail show on left or right"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label",
      "info": "t:sections.main-product.settings.media_position.info"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label",
      "info": "t:sections.main-product.settings.image_zoom.info"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__3.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "checkbox",
      "id": "show_full_image",
      "default": false,
      "label": "Show full width image on mobile."
    },
    {
      "type": "range",
      "id": "first_image_size",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Image size",
      "default": 100
    },
     {
      "type": "range",
      "id": "second_image_size",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Next Image Dispalay",
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_top_mb",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top Mobile",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom_mb",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom Mobile",
      "default": 36
    }
  ]
}
{% endschema %}
